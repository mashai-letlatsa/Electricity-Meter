
NewElecCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001148  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00001148  000011dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800078  00800078  000011f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001224  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f4a  00000000  00000000  000012e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00002232  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000622  00000000  00000000  00002990  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00002fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050c  00000000  00000000  00003178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000080b  00000000  00000000  00003684  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003e8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <__vector_7>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__divsf3_pse+0x86>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <CalculatePower+0x1ba>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <Voltage+0x11c>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <lcdCommand+0x6>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 e4       	ldi	r30, 0x48	; 72
     162:	f1 e1       	ldi	r31, 0x11	; 17
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a8 37       	cpi	r26, 0x78	; 120
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a8 e7       	ldi	r26, 0x78	; 120
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	aa 38       	cpi	r26, 0x8A	; 138
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <main>
     184:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <ADC_Init>:
	lcdCommand(0x01); // clear display
	_delay_ms(5);
}

void lcdClear(){
	lcdCommand(0x01); // clear display
     18c:	87 b1       	in	r24, 0x07	; 7
     18e:	80 64       	ori	r24, 0x40	; 64
     190:	87 b9       	out	0x07, r24	; 7
     192:	86 b1       	in	r24, 0x06	; 6
     194:	87 68       	ori	r24, 0x87	; 135
     196:	86 b9       	out	0x06, r24	; 6
     198:	08 95       	ret

0000019a <ADC_Read>:
     19a:	97 b1       	in	r25, 0x07	; 7
     19c:	90 7f       	andi	r25, 0xF0	; 240
     19e:	8f 70       	andi	r24, 0x0F	; 15
     1a0:	89 2b       	or	r24, r25
     1a2:	87 b9       	out	0x07, r24	; 7
     1a4:	86 b1       	in	r24, 0x06	; 6
     1a6:	80 64       	ori	r24, 0x40	; 64
     1a8:	86 b9       	out	0x06, r24	; 6
     1aa:	36 99       	sbic	0x06, 6	; 6
     1ac:	fe cf       	rjmp	.-4      	; 0x1aa <ADC_Read+0x10>
     1ae:	84 b1       	in	r24, 0x04	; 4
     1b0:	95 b1       	in	r25, 0x05	; 5
     1b2:	08 95       	ret

000001b4 <lcdCommand>:
     1b4:	88 bb       	out	0x18, r24	; 24
     1b6:	82 b3       	in	r24, 0x12	; 18
     1b8:	8f 7e       	andi	r24, 0xEF	; 239
     1ba:	82 bb       	out	0x12, r24	; 18
     1bc:	82 b3       	in	r24, 0x12	; 18
     1be:	80 64       	ori	r24, 0x40	; 64
     1c0:	82 bb       	out	0x12, r24	; 18
     1c2:	81 ee       	ldi	r24, 0xE1	; 225
     1c4:	94 e0       	ldi	r25, 0x04	; 4
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <lcdCommand+0x12>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <lcdCommand+0x18>
     1cc:	00 00       	nop
     1ce:	82 b3       	in	r24, 0x12	; 18
     1d0:	8f 7b       	andi	r24, 0xBF	; 191
     1d2:	82 bb       	out	0x12, r24	; 18
     1d4:	81 ee       	ldi	r24, 0xE1	; 225
     1d6:	94 e0       	ldi	r25, 0x04	; 4
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcdCommand+0x24>
     1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcdCommand+0x2a>
     1de:	00 00       	nop
     1e0:	08 95       	ret

000001e2 <lcdData>:
     1e2:	88 bb       	out	0x18, r24	; 24
     1e4:	82 b3       	in	r24, 0x12	; 18
     1e6:	80 61       	ori	r24, 0x10	; 16
     1e8:	82 bb       	out	0x12, r24	; 18
     1ea:	82 b3       	in	r24, 0x12	; 18
     1ec:	80 64       	ori	r24, 0x40	; 64
     1ee:	82 bb       	out	0x12, r24	; 18
     1f0:	81 ee       	ldi	r24, 0xE1	; 225
     1f2:	94 e0       	ldi	r25, 0x04	; 4
     1f4:	01 97       	sbiw	r24, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <lcdData+0x12>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <lcdData+0x18>
     1fa:	00 00       	nop
     1fc:	82 b3       	in	r24, 0x12	; 18
     1fe:	8f 7b       	andi	r24, 0xBF	; 191
     200:	82 bb       	out	0x12, r24	; 18
     202:	81 ee       	ldi	r24, 0xE1	; 225
     204:	94 e0       	ldi	r25, 0x04	; 4
     206:	01 97       	sbiw	r24, 0x01	; 1
     208:	f1 f7       	brne	.-4      	; 0x206 <lcdData+0x24>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <lcdData+0x2a>
     20c:	00 00       	nop
     20e:	08 95       	ret

00000210 <lcdInit>:
     210:	8f ef       	ldi	r24, 0xFF	; 255
     212:	87 bb       	out	0x17, r24	; 23
     214:	81 b3       	in	r24, 0x11	; 17
     216:	80 67       	ori	r24, 0x70	; 112
     218:	81 bb       	out	0x11, r24	; 17
     21a:	81 ee       	ldi	r24, 0xE1	; 225
     21c:	94 e0       	ldi	r25, 0x04	; 4
     21e:	01 97       	sbiw	r24, 0x01	; 1
     220:	f1 f7       	brne	.-4      	; 0x21e <lcdInit+0xe>
     222:	00 c0       	rjmp	.+0      	; 0x224 <lcdInit+0x14>
     224:	00 00       	nop
     226:	88 e3       	ldi	r24, 0x38	; 56
     228:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcdCommand>
     22c:	8c e0       	ldi	r24, 0x0C	; 12
     22e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcdCommand>
     232:	86 e0       	ldi	r24, 0x06	; 6
     234:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcdCommand>
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcdCommand>
     23e:	81 ee       	ldi	r24, 0xE1	; 225
     240:	94 e0       	ldi	r25, 0x04	; 4
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <lcdInit+0x32>
     246:	00 c0       	rjmp	.+0      	; 0x248 <lcdInit+0x38>
     248:	00 00       	nop
     24a:	08 95       	ret

0000024c <lcdString>:
}

void lcdString(char* str){
     24c:	0f 93       	push	r16
     24e:	1f 93       	push	r17
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	8c 01       	movw	r16, r24
	int i;
	for(i=0; str[i]!=0;i++){
     256:	c0 e0       	ldi	r28, 0x00	; 0
     258:	d0 e0       	ldi	r29, 0x00	; 0
     25a:	03 c0       	rjmp	.+6      	; 0x262 <lcdString+0x16>
		lcdData(str[i]);
     25c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcdData>
	lcdCommand(0x01); // clear display
}

void lcdString(char* str){
	int i;
	for(i=0; str[i]!=0;i++){
     260:	21 96       	adiw	r28, 0x01	; 1
     262:	f8 01       	movw	r30, r16
     264:	ec 0f       	add	r30, r28
     266:	fd 1f       	adc	r31, r29
     268:	80 81       	ld	r24, Z
     26a:	81 11       	cpse	r24, r1
     26c:	f7 cf       	rjmp	.-18     	; 0x25c <lcdString+0x10>
		lcdData(str[i]);
	}
}
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	1f 91       	pop	r17
     274:	0f 91       	pop	r16
     276:	08 95       	ret

00000278 <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD with x_y position */
{
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	ea 01       	movw	r28, r20
	char address = 0;
	if (row == 0) {
     27e:	88 23       	and	r24, r24
     280:	69 f0       	breq	.+26     	; 0x29c <LCD_String_xy+0x24>
		address = 0x00 + pos;
		} else if (row == 1) {
     282:	81 30       	cpi	r24, 0x01	; 1
     284:	11 f4       	brne	.+4      	; 0x28a <LCD_String_xy+0x12>
		address = 0x40 + pos;
     286:	60 5c       	subi	r22, 0xC0	; 192
     288:	09 c0       	rjmp	.+18     	; 0x29c <LCD_String_xy+0x24>
		} else if (row == 2) {
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	11 f4       	brne	.+4      	; 0x292 <LCD_String_xy+0x1a>
		address = 0x10 + pos;
     28e:	60 5f       	subi	r22, 0xF0	; 240
     290:	05 c0       	rjmp	.+10     	; 0x29c <LCD_String_xy+0x24>
		} else if (row == 3) {
     292:	83 30       	cpi	r24, 0x03	; 3
     294:	11 f4       	brne	.+4      	; 0x29a <LCD_String_xy+0x22>
		address = 0x50 + pos;
     296:	60 5b       	subi	r22, 0xB0	; 176
     298:	01 c0       	rjmp	.+2      	; 0x29c <LCD_String_xy+0x24>
	}
}

void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD with x_y position */
{
	char address = 0;
     29a:	60 e0       	ldi	r22, 0x00	; 0
		} else if (row == 2) {
		address = 0x10 + pos;
		} else if (row == 3) {
		address = 0x50 + pos;
	}
	lcdCommand(address | 0x80);
     29c:	86 2f       	mov	r24, r22
     29e:	80 68       	ori	r24, 0x80	; 128
     2a0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcdCommand>
	lcdString(str);
     2a4:	ce 01       	movw	r24, r28
     2a6:	0e 94 26 01 	call	0x24c	; 0x24c <lcdString>
}
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	08 95       	ret

000002b0 <Voltage>:


void Voltage(){
     2b0:	4f 92       	push	r4
     2b2:	5f 92       	push	r5
     2b4:	6f 92       	push	r6
     2b6:	7f 92       	push	r7
     2b8:	8f 92       	push	r8
     2ba:	9f 92       	push	r9
     2bc:	af 92       	push	r10
     2be:	bf 92       	push	r11
     2c0:	cf 92       	push	r12
     2c2:	df 92       	push	r13
     2c4:	ef 92       	push	r14
     2c6:	ff 92       	push	r15
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	cd b7       	in	r28, 0x3d	; 61
     2d2:	de b7       	in	r29, 0x3e	; 62
     2d4:	c4 55       	subi	r28, 0x54	; 84
     2d6:	d1 09       	sbc	r29, r1
     2d8:	0f b6       	in	r0, 0x3f	; 63
     2da:	f8 94       	cli
     2dc:	de bf       	out	0x3e, r29	; 62
     2de:	0f be       	out	0x3f, r0	; 63
     2e0:	cd bf       	out	0x3d, r28	; 61
	float sum_voltage = 0.0;
	float sum_current = 0.0;

	for (int i = 0; i < SAMPLES; i++) {
     2e2:	00 e0       	ldi	r16, 0x00	; 0
     2e4:	10 e0       	ldi	r17, 0x00	; 0
}


void Voltage(){
	float sum_voltage = 0.0;
	float sum_current = 0.0;
     2e6:	c1 2c       	mov	r12, r1
     2e8:	d1 2c       	mov	r13, r1
     2ea:	76 01       	movw	r14, r12
	lcdString(str);
}


void Voltage(){
	float sum_voltage = 0.0;
     2ec:	46 01       	movw	r8, r12
     2ee:	57 01       	movw	r10, r14
	float sum_current = 0.0;

	for (int i = 0; i < SAMPLES; i++) {
     2f0:	7b c0       	rjmp	.+246    	; 0x3e8 <Voltage+0x138>
		float V = ADC_Read(A2);
     2f2:	82 e0       	ldi	r24, 0x02	; 2
     2f4:	0e 94 cd 00 	call	0x19a	; 0x19a <ADC_Read>
     2f8:	bc 01       	movw	r22, r24
     2fa:	80 e0       	ldi	r24, 0x00	; 0
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	0e 94 ef 04 	call	0x9de	; 0x9de <__floatunsisf>
     302:	2b 01       	movw	r4, r22
     304:	3c 01       	movw	r6, r24
		float C = ADC_Read(A3);
     306:	83 e0       	ldi	r24, 0x03	; 3
     308:	0e 94 cd 00 	call	0x19a	; 0x19a <ADC_Read>
     30c:	bc 01       	movw	r22, r24
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 ef 04 	call	0x9de	; 0x9de <__floatunsisf>
     316:	65 96       	adiw	r28, 0x15	; 21
     318:	6c af       	std	Y+60, r22	; 0x3c
     31a:	7d af       	std	Y+61, r23	; 0x3d
     31c:	8e af       	std	Y+62, r24	; 0x3e
     31e:	9f af       	std	Y+63, r25	; 0x3f
     320:	65 97       	sbiw	r28, 0x15	; 21
		float current_voltage = ((V * 5.0) / 1024.0);
     322:	20 e0       	ldi	r18, 0x00	; 0
     324:	30 e0       	ldi	r19, 0x00	; 0
     326:	40 ea       	ldi	r20, 0xA0	; 160
     328:	50 e4       	ldi	r21, 0x40	; 64
     32a:	c3 01       	movw	r24, r6
     32c:	b2 01       	movw	r22, r4
     32e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e8       	ldi	r20, 0x80	; 128
     338:	5a e3       	ldi	r21, 0x3A	; 58
     33a:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
		float actual_voltage=(((current_voltage + 0.09)*(8.5))-5.7)*10;
     33e:	2c ee       	ldi	r18, 0xEC	; 236
     340:	31 e5       	ldi	r19, 0x51	; 81
     342:	48 eb       	ldi	r20, 0xB8	; 184
     344:	5d e3       	ldi	r21, 0x3D	; 61
     346:	0e 94 0c 04 	call	0x818	; 0x818 <__addsf3>
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	48 e0       	ldi	r20, 0x08	; 8
     350:	51 e4       	ldi	r21, 0x41	; 65
     352:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     356:	26 e6       	ldi	r18, 0x66	; 102
     358:	36 e6       	ldi	r19, 0x66	; 102
     35a:	46 eb       	ldi	r20, 0xB6	; 182
     35c:	50 e4       	ldi	r21, 0x40	; 64
     35e:	0e 94 0b 04 	call	0x816	; 0x816 <__subsf3>
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	30 e0       	ldi	r19, 0x00	; 0
     366:	40 e2       	ldi	r20, 0x20	; 32
     368:	51 e4       	ldi	r21, 0x41	; 65
     36a:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     36e:	2b 01       	movw	r4, r22
     370:	3c 01       	movw	r6, r24
		float current_current = fabs(((C * 5.0) / 1024.0) - 2.5) / 0.06;
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	40 ea       	ldi	r20, 0xA0	; 160
     378:	50 e4       	ldi	r21, 0x40	; 64
     37a:	65 96       	adiw	r28, 0x15	; 21
     37c:	6c ad       	ldd	r22, Y+60	; 0x3c
     37e:	7d ad       	ldd	r23, Y+61	; 0x3d
     380:	8e ad       	ldd	r24, Y+62	; 0x3e
     382:	9f ad       	ldd	r25, Y+63	; 0x3f
     384:	65 97       	sbiw	r28, 0x15	; 21
     386:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	40 e8       	ldi	r20, 0x80	; 128
     390:	5a e3       	ldi	r21, 0x3A	; 58
     392:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	40 e2       	ldi	r20, 0x20	; 32
     39c:	50 e4       	ldi	r21, 0x40	; 64
     39e:	0e 94 0b 04 	call	0x816	; 0x816 <__subsf3>
     3a2:	9f 77       	andi	r25, 0x7F	; 127
     3a4:	2f e8       	ldi	r18, 0x8F	; 143
     3a6:	32 ec       	ldi	r19, 0xC2	; 194
     3a8:	45 e7       	ldi	r20, 0x75	; 117
     3aa:	5d e3       	ldi	r21, 0x3D	; 61
     3ac:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>
     3b0:	65 96       	adiw	r28, 0x15	; 21
     3b2:	6c af       	std	Y+60, r22	; 0x3c
     3b4:	7d af       	std	Y+61, r23	; 0x3d
     3b6:	8e af       	std	Y+62, r24	; 0x3e
     3b8:	9f af       	std	Y+63, r25	; 0x3f
     3ba:	65 97       	sbiw	r28, 0x15	; 21

		sum_voltage += actual_voltage;
     3bc:	a3 01       	movw	r20, r6
     3be:	92 01       	movw	r18, r4
     3c0:	c5 01       	movw	r24, r10
     3c2:	b4 01       	movw	r22, r8
     3c4:	0e 94 0c 04 	call	0x818	; 0x818 <__addsf3>
     3c8:	4b 01       	movw	r8, r22
     3ca:	5c 01       	movw	r10, r24
		sum_current += current_current;
     3cc:	65 96       	adiw	r28, 0x15	; 21
     3ce:	2c ad       	ldd	r18, Y+60	; 0x3c
     3d0:	3d ad       	ldd	r19, Y+61	; 0x3d
     3d2:	4e ad       	ldd	r20, Y+62	; 0x3e
     3d4:	5f ad       	ldd	r21, Y+63	; 0x3f
     3d6:	65 97       	sbiw	r28, 0x15	; 21
     3d8:	c7 01       	movw	r24, r14
     3da:	b6 01       	movw	r22, r12
     3dc:	0e 94 0c 04 	call	0x818	; 0x818 <__addsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24

void Voltage(){
	float sum_voltage = 0.0;
	float sum_current = 0.0;

	for (int i = 0; i < SAMPLES; i++) {
     3e4:	0f 5f       	subi	r16, 0xFF	; 255
     3e6:	1f 4f       	sbci	r17, 0xFF	; 255
     3e8:	08 3e       	cpi	r16, 0xE8	; 232
     3ea:	83 e0       	ldi	r24, 0x03	; 3
     3ec:	18 07       	cpc	r17, r24
     3ee:	0c f4       	brge	.+2      	; 0x3f2 <Voltage+0x142>
     3f0:	80 cf       	rjmp	.-256    	; 0x2f2 <Voltage+0x42>

		sum_voltage += actual_voltage;
		sum_current += current_current;
	}

	peak_voltage = sum_voltage / SAMPLES;
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	4a e7       	ldi	r20, 0x7A	; 122
     3f8:	54 e4       	ldi	r21, 0x44	; 68
     3fa:	c5 01       	movw	r24, r10
     3fc:	b4 01       	movw	r22, r8
     3fe:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>
     402:	4b 01       	movw	r8, r22
     404:	5c 01       	movw	r10, r24
     406:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <peak_voltage>
     40a:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <peak_voltage+0x1>
     40e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <peak_voltage+0x2>
     412:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <peak_voltage+0x3>
	peak_current = sum_current / SAMPLES;
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	4a e7       	ldi	r20, 0x7A	; 122
     41c:	54 e4       	ldi	r21, 0x44	; 68
     41e:	c7 01       	movw	r24, r14
     420:	b6 01       	movw	r22, r12
     422:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>
     426:	60 93 82 00 	sts	0x0082, r22	; 0x800082 <peak_current>
     42a:	70 93 83 00 	sts	0x0083, r23	; 0x800083 <peak_current+0x1>
     42e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <peak_current+0x2>
     432:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <peak_current+0x3>
		char volt[20];
		char shelembe[20];
		strcpy(volt,"V=");
     436:	86 e5       	ldi	r24, 0x56	; 86
     438:	9d e3       	ldi	r25, 0x3D	; 61
     43a:	9a 83       	std	Y+2, r25	; 0x02
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	1b 82       	std	Y+3, r1	; 0x03
		dtostrf(peak_voltage, 5 , 2,shelembe);
     440:	8e 01       	movw	r16, r28
     442:	0b 5e       	subi	r16, 0xEB	; 235
     444:	1f 4f       	sbci	r17, 0xFF	; 255
     446:	22 e0       	ldi	r18, 0x02	; 2
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	45 e0       	ldi	r20, 0x05	; 5
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	c5 01       	movw	r24, r10
     450:	b4 01       	movw	r22, r8
     452:	0e 94 0e 06 	call	0xc1c	; 0xc1c <dtostrf>
		strcat(volt,shelembe);
     456:	b8 01       	movw	r22, r16
     458:	ce 01       	movw	r24, r28
     45a:	01 96       	adiw	r24, 0x01	; 1
     45c:	0e 94 2e 06 	call	0xc5c	; 0xc5c <strcat>
		//strcat(volt,"V");
		LCD_String_xy(0,0, volt);
     460:	ae 01       	movw	r20, r28
     462:	4f 5f       	subi	r20, 0xFF	; 255
     464:	5f 4f       	sbci	r21, 0xFF	; 255
     466:	60 e0       	ldi	r22, 0x00	; 0
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
		
		char curr[20];
		char buffer[20];
		strcpy(curr,"I=");
     46e:	89 e4       	ldi	r24, 0x49	; 73
     470:	9d e3       	ldi	r25, 0x3D	; 61
     472:	9a a7       	std	Y+42, r25	; 0x2a
     474:	89 a7       	std	Y+41, r24	; 0x29
     476:	1b a6       	std	Y+43, r1	; 0x2b
		dtostrf(peak_current, 4 , 2,buffer);
     478:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <peak_current>
     47c:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <peak_current+0x1>
     480:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <peak_current+0x2>
     484:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <peak_current+0x3>
     488:	08 5d       	subi	r16, 0xD8	; 216
     48a:	1f 4f       	sbci	r17, 0xFF	; 255
     48c:	22 e0       	ldi	r18, 0x02	; 2
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	44 e0       	ldi	r20, 0x04	; 4
     492:	50 e0       	ldi	r21, 0x00	; 0
     494:	0e 94 0e 06 	call	0xc1c	; 0xc1c <dtostrf>
		strcat(curr,buffer);
     498:	b8 01       	movw	r22, r16
     49a:	ce 01       	movw	r24, r28
     49c:	89 96       	adiw	r24, 0x29	; 41
     49e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <strcat>
		//strcat(curr,"A");
		LCD_String_xy(0,9, curr);
     4a2:	ae 01       	movw	r20, r28
     4a4:	47 5d       	subi	r20, 0xD7	; 215
     4a6:	5f 4f       	sbci	r21, 0xFF	; 255
     4a8:	69 e0       	ldi	r22, 0x09	; 9
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
}
     4b0:	cc 5a       	subi	r28, 0xAC	; 172
     4b2:	df 4f       	sbci	r29, 0xFF	; 255
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	de bf       	out	0x3e, r29	; 62
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	cd bf       	out	0x3d, r28	; 61
     4be:	df 91       	pop	r29
     4c0:	cf 91       	pop	r28
     4c2:	1f 91       	pop	r17
     4c4:	0f 91       	pop	r16
     4c6:	ff 90       	pop	r15
     4c8:	ef 90       	pop	r14
     4ca:	df 90       	pop	r13
     4cc:	cf 90       	pop	r12
     4ce:	bf 90       	pop	r11
     4d0:	af 90       	pop	r10
     4d2:	9f 90       	pop	r9
     4d4:	8f 90       	pop	r8
     4d6:	7f 90       	pop	r7
     4d8:	6f 90       	pop	r6
     4da:	5f 90       	pop	r5
     4dc:	4f 90       	pop	r4
     4de:	08 95       	ret

000004e0 <CalculatePower>:

void CalculatePower() {
     4e0:	8f 92       	push	r8
     4e2:	9f 92       	push	r9
     4e4:	af 92       	push	r10
     4e6:	bf 92       	push	r11
     4e8:	cf 92       	push	r12
     4ea:	df 92       	push	r13
     4ec:	ef 92       	push	r14
     4ee:	ff 92       	push	r15
     4f0:	0f 93       	push	r16
     4f2:	1f 93       	push	r17
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	cd b7       	in	r28, 0x3d	; 61
     4fa:	de b7       	in	r29, 0x3e	; 62
     4fc:	c8 57       	subi	r28, 0x78	; 120
     4fe:	d1 09       	sbc	r29, r1
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	de bf       	out	0x3e, r29	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	cd bf       	out	0x3d, r28	; 61
	Voltage();
     50a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <Voltage>
	float power = peak_voltage * peak_current;
     50e:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <peak_voltage>
     512:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <peak_voltage+0x1>
     516:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <peak_voltage+0x2>
     51a:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <peak_voltage+0x3>
     51e:	20 91 82 00 	lds	r18, 0x0082	; 0x800082 <peak_current>
     522:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peak_current+0x1>
     526:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <peak_current+0x2>
     52a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <peak_current+0x3>
     52e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     532:	4b 01       	movw	r8, r22
     534:	5c 01       	movw	r10, r24
	float power_kW = power / 1000.0;
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	4a e7       	ldi	r20, 0x7A	; 122
     53c:	54 e4       	ldi	r21, 0x44	; 68
     53e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>

	char power_str[20];
	char buffer[20];
	strcpy(power_str,"P=");
     542:	20 e5       	ldi	r18, 0x50	; 80
     544:	3d e3       	ldi	r19, 0x3D	; 61
     546:	3a 83       	std	Y+2, r19	; 0x02
     548:	29 83       	std	Y+1, r18	; 0x01
     54a:	1b 82       	std	Y+3, r1	; 0x03
	dtostrf(power_kW, 4, 2, buffer);
     54c:	8e 01       	movw	r16, r28
     54e:	0b 5e       	subi	r16, 0xEB	; 235
     550:	1f 4f       	sbci	r17, 0xFF	; 255
     552:	22 e0       	ldi	r18, 0x02	; 2
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	44 e0       	ldi	r20, 0x04	; 4
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <dtostrf>
	strcat(power_str, buffer);
     55e:	b8 01       	movw	r22, r16
     560:	04 51       	subi	r16, 0x14	; 20
     562:	11 09       	sbc	r17, r1
     564:	c8 01       	movw	r24, r16
     566:	0e 94 2e 06 	call	0xc5c	; 0xc5c <strcat>
	strcat(power_str,"kW");
     56a:	f8 01       	movw	r30, r16
     56c:	01 90       	ld	r0, Z+
     56e:	00 20       	and	r0, r0
     570:	e9 f7       	brne	.-6      	; 0x56c <CalculatePower+0x8c>
     572:	31 97       	sbiw	r30, 0x01	; 1
     574:	0f 2e       	mov	r0, r31
     576:	fb e6       	ldi	r31, 0x6B	; 107
     578:	ef 2e       	mov	r14, r31
     57a:	f7 e5       	ldi	r31, 0x57	; 87
     57c:	ff 2e       	mov	r15, r31
     57e:	f0 2d       	mov	r31, r0
     580:	f1 82       	std	Z+1, r15	; 0x01
     582:	e0 82       	st	Z, r14
     584:	12 82       	std	Z+2, r1	; 0x02
	LCD_String_xy(1, 0, power_str);
     586:	a8 01       	movw	r20, r16
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
// Calculate time difference in seconds
uint16_t current_time_difference = time_difference;
     590:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__data_end>
     594:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__data_end+0x1>
uint16_t difference_seconds = (current_time_difference - previous_time_difference);
     598:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <previous_time_difference>
     59c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <previous_time_difference+0x1>
     5a0:	68 1b       	sub	r22, r24
     5a2:	79 0b       	sbc	r23, r25

	float energy_kWh = (power * difference_seconds) / 3600000.0;
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	0e 94 ef 04 	call	0x9de	; 0x9de <__floatunsisf>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	c5 01       	movw	r24, r10
     5b2:	b4 01       	movw	r22, r8
     5b4:	0e 94 a1 05 	call	0xb42	; 0xb42 <__mulsf3>
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	3a eb       	ldi	r19, 0xBA	; 186
     5bc:	4b e5       	ldi	r20, 0x5B	; 91
     5be:	5a e4       	ldi	r21, 0x4A	; 74
     5c0:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>
     5c4:	4b 01       	movw	r8, r22
     5c6:	5c 01       	movw	r10, r24
	accumulated_energy_kWh += energy_kWh;
     5c8:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <accumulated_energy_kWh>
     5cc:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <accumulated_energy_kWh+0x1>
     5d0:	40 91 80 00 	lds	r20, 0x0080	; 0x800080 <accumulated_energy_kWh+0x2>
     5d4:	50 91 81 00 	lds	r21, 0x0081	; 0x800081 <accumulated_energy_kWh+0x3>
     5d8:	0e 94 0c 04 	call	0x818	; 0x818 <__addsf3>
     5dc:	60 93 7e 00 	sts	0x007E, r22	; 0x80007e <accumulated_energy_kWh>
     5e0:	70 93 7f 00 	sts	0x007F, r23	; 0x80007f <accumulated_energy_kWh+0x1>
     5e4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <accumulated_energy_kWh+0x2>
     5e8:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <accumulated_energy_kWh+0x3>

    char energy_str[20];
    char energy_buff[20];
    strcpy(energy_str,"E=");
     5ec:	6e 01       	movw	r12, r28
     5ee:	29 e2       	ldi	r18, 0x29	; 41
     5f0:	c2 0e       	add	r12, r18
     5f2:	d1 1c       	adc	r13, r1
     5f4:	25 e4       	ldi	r18, 0x45	; 69
     5f6:	3d e3       	ldi	r19, 0x3D	; 61
     5f8:	3a a7       	std	Y+42, r19	; 0x2a
     5fa:	29 a7       	std	Y+41, r18	; 0x29
     5fc:	f6 01       	movw	r30, r12
     5fe:	12 82       	std	Z+2, r1	; 0x02
    dtostrf(accumulated_energy_kWh, 4, 2, energy_buff);
     600:	04 5c       	subi	r16, 0xC4	; 196
     602:	1f 4f       	sbci	r17, 0xFF	; 255
     604:	22 e0       	ldi	r18, 0x02	; 2
     606:	30 e0       	ldi	r19, 0x00	; 0
     608:	44 e0       	ldi	r20, 0x04	; 4
     60a:	50 e0       	ldi	r21, 0x00	; 0
     60c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <dtostrf>
    strcat(energy_str, energy_buff);
     610:	b8 01       	movw	r22, r16
     612:	c6 01       	movw	r24, r12
     614:	0e 94 2e 06 	call	0xc5c	; 0xc5c <strcat>
    strcat(energy_str,"kWh");
     618:	f6 01       	movw	r30, r12
     61a:	01 90       	ld	r0, Z+
     61c:	00 20       	and	r0, r0
     61e:	e9 f7       	brne	.-6      	; 0x61a <CalculatePower+0x13a>
     620:	31 97       	sbiw	r30, 0x01	; 1
     622:	f1 82       	std	Z+1, r15	; 0x01
     624:	e0 82       	st	Z, r14
     626:	88 e6       	ldi	r24, 0x68	; 104
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	93 83       	std	Z+3, r25	; 0x03
     62c:	82 83       	std	Z+2, r24	; 0x02
    LCD_String_xy(2, 0, energy_str);
     62e:	a6 01       	movw	r20, r12
     630:	60 e0       	ldi	r22, 0x00	; 0
     632:	82 e0       	ldi	r24, 0x02	; 2
     634:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>

	if (Ebalance >= (energy_kWh)/1.84) {
     638:	2f e1       	ldi	r18, 0x1F	; 31
     63a:	35 e8       	ldi	r19, 0x85	; 133
     63c:	4b ee       	ldi	r20, 0xEB	; 235
     63e:	5f e3       	ldi	r21, 0x3F	; 63
     640:	c5 01       	movw	r24, r10
     642:	b4 01       	movw	r22, r8
     644:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divsf3>
     648:	4b 01       	movw	r8, r22
     64a:	5c 01       	movw	r10, r24
     64c:	c0 90 60 00 	lds	r12, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     650:	d0 90 61 00 	lds	r13, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     654:	e0 90 62 00 	lds	r14, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     658:	f0 90 63 00 	lds	r15, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     65c:	a7 01       	movw	r20, r14
     65e:	96 01       	movw	r18, r12
     660:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__cmpsf2>
     664:	18 16       	cp	r1, r24
     666:	7c f0       	brlt	.+30     	; 0x686 <CalculatePower+0x1a6>
		Ebalance -= (energy_kWh)/1.84;
     668:	a5 01       	movw	r20, r10
     66a:	94 01       	movw	r18, r8
     66c:	c7 01       	movw	r24, r14
     66e:	b6 01       	movw	r22, r12
     670:	0e 94 0b 04 	call	0x816	; 0x816 <__subsf3>
     674:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
     678:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     67c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     680:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     684:	10 c0       	rjmp	.+32     	; 0x6a6 <CalculatePower+0x1c6>
		} else {
		Ebalance = 0.0;
     686:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     68a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     68e:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     692:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
		peak_current = 0.0;
     696:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <peak_current>
     69a:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <peak_current+0x1>
     69e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <peak_current+0x2>
     6a2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <peak_current+0x3>
	}

		char k[20];
		char h[20];
		strcpy(h,"BAL=");
     6a6:	85 e0       	ldi	r24, 0x05	; 5
     6a8:	e4 e6       	ldi	r30, 0x64	; 100
     6aa:	f0 e0       	ldi	r31, 0x00	; 0
     6ac:	de 01       	movw	r26, r28
     6ae:	ab 59       	subi	r26, 0x9B	; 155
     6b0:	bf 4f       	sbci	r27, 0xFF	; 255
     6b2:	01 90       	ld	r0, Z+
     6b4:	0d 92       	st	X+, r0
     6b6:	8a 95       	dec	r24
     6b8:	e1 f7       	brne	.-8      	; 0x6b2 <CalculatePower+0x1d2>
		LCD_String_xy(3,0,h);
     6ba:	ae 01       	movw	r20, r28
     6bc:	4b 59       	subi	r20, 0x9B	; 155
     6be:	5f 4f       	sbci	r21, 0xFF	; 255
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	83 e0       	ldi	r24, 0x03	; 3
     6c4:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
		strcpy(k,"R");
     6c8:	82 e5       	ldi	r24, 0x52	; 82
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	63 96       	adiw	r28, 0x13	; 19
     6ce:	9f af       	std	Y+63, r25	; 0x3f
     6d0:	8e af       	std	Y+62, r24	; 0x3e
     6d2:	63 97       	sbiw	r28, 0x13	; 19
		dtostrf(Ebalance,5,2,&k[1]);
     6d4:	01 e5       	ldi	r16, 0x51	; 81
     6d6:	10 e0       	ldi	r17, 0x00	; 0
     6d8:	0c 0f       	add	r16, r28
     6da:	1d 1f       	adc	r17, r29
     6dc:	0f 5f       	subi	r16, 0xFF	; 255
     6de:	1f 4f       	sbci	r17, 0xFF	; 255
     6e0:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6e4:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6e8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     6ec:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     6f0:	22 e0       	ldi	r18, 0x02	; 2
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	45 e0       	ldi	r20, 0x05	; 5
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	0e 94 0e 06 	call	0xc1c	; 0xc1c <dtostrf>
		LCD_String_xy(3,4,k);
     6fc:	ae 01       	movw	r20, r28
     6fe:	4f 5a       	subi	r20, 0xAF	; 175
     700:	5f 4f       	sbci	r21, 0xFF	; 255
     702:	64 e0       	ldi	r22, 0x04	; 4
     704:	83 e0       	ldi	r24, 0x03	; 3
     706:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
}
     70a:	c8 58       	subi	r28, 0x88	; 136
     70c:	df 4f       	sbci	r29, 0xFF	; 255
     70e:	0f b6       	in	r0, 0x3f	; 63
     710:	f8 94       	cli
     712:	de bf       	out	0x3e, r29	; 62
     714:	0f be       	out	0x3f, r0	; 63
     716:	cd bf       	out	0x3d, r28	; 61
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	bf 90       	pop	r11
     72a:	af 90       	pop	r10
     72c:	9f 90       	pop	r9
     72e:	8f 90       	pop	r8
     730:	08 95       	ret

00000732 <Elec_Control>:

void Elec_Control(){
	CalculatePower();
     732:	0e 94 70 02 	call	0x4e0	; 0x4e0 <CalculatePower>
	if (Ebalance <= 0.0) {
     736:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     73a:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     73e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     742:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     746:	20 e0       	ldi	r18, 0x00	; 0
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	a9 01       	movw	r20, r18
     74c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__cmpsf2>
     750:	18 16       	cp	r1, r24
     752:	74 f0       	brlt	.+28     	; 0x770 <Elec_Control+0x3e>
		PORTA &= ~(1 << PA4);
     754:	8b b3       	in	r24, 0x1b	; 27
     756:	8f 7e       	andi	r24, 0xEF	; 239
     758:	8b bb       	out	0x1b, r24	; 27
		LCD_String_xy(1, 9, "Pwr:OFF");
     75a:	49 e6       	ldi	r20, 0x69	; 105
     75c:	50 e0       	ldi	r21, 0x00	; 0
     75e:	69 e0       	ldi	r22, 0x09	; 9
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     766:	83 e0       	ldi	r24, 0x03	; 3
     768:	8a 95       	dec	r24
     76a:	f1 f7       	brne	.-4      	; 0x768 <Elec_Control+0x36>
     76c:	00 00       	nop
     76e:	08 95       	ret
		_delay_us(10);
		} else {
		PORTA |= (1 << PA4);
     770:	8b b3       	in	r24, 0x1b	; 27
     772:	80 61       	ori	r24, 0x10	; 16
     774:	8b bb       	out	0x1b, r24	; 27
		LCD_String_xy(1, 9, "Pwr:ON");
     776:	41 e7       	ldi	r20, 0x71	; 113
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	69 e0       	ldi	r22, 0x09	; 9
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_String_xy>
     782:	83 e0       	ldi	r24, 0x03	; 3
     784:	8a 95       	dec	r24
     786:	f1 f7       	brne	.-4      	; 0x784 <Elec_Control+0x52>
     788:	00 00       	nop
     78a:	08 95       	ret

0000078c <initTimer>:
		_delay_us(10);
	}
}

void initTimer() {
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode, prescaler 256
     78c:	8e b5       	in	r24, 0x2e	; 46
     78e:	8c 60       	ori	r24, 0x0C	; 12
     790:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 31250; // Compare value for 1 second interrupt interval
     792:	82 e1       	ldi	r24, 0x12	; 18
     794:	9a e7       	ldi	r25, 0x7A	; 122
     796:	9b bd       	out	0x2b, r25	; 43
     798:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1 << OCIE1A); // Enable Timer1 Compare Match A interrupt
     79a:	89 b7       	in	r24, 0x39	; 57
     79c:	80 61       	ori	r24, 0x10	; 16
     79e:	89 bf       	out	0x39, r24	; 57
	sei(); // Enable global interrupts
     7a0:	78 94       	sei
     7a2:	08 95       	ret

000007a4 <__vector_7>:
}

ISR(TIMER1_COMPA_vect) {
     7a4:	1f 92       	push	r1
     7a6:	0f 92       	push	r0
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	0f 92       	push	r0
     7ac:	11 24       	eor	r1, r1
     7ae:	8f 93       	push	r24
     7b0:	9f 93       	push	r25
	time_elapsed_seconds++; // Increment time counter every second
     7b2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <time_elapsed_seconds>
     7b6:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <time_elapsed_seconds+0x1>
     7ba:	01 96       	adiw	r24, 0x01	; 1
     7bc:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <time_elapsed_seconds+0x1>
     7c0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <time_elapsed_seconds>
	previous_time_difference = time_difference; // Store the previous time difference
     7c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
     7c8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
     7cc:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <previous_time_difference+0x1>
     7d0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <previous_time_difference>
	time_difference = time_elapsed_seconds; // Store the current time difference
     7d4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <time_elapsed_seconds>
     7d8:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <time_elapsed_seconds+0x1>
     7dc:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__data_end+0x1>
     7e0:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
}
     7e4:	9f 91       	pop	r25
     7e6:	8f 91       	pop	r24
     7e8:	0f 90       	pop	r0
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	0f 90       	pop	r0
     7ee:	1f 90       	pop	r1
     7f0:	18 95       	reti

000007f2 <main>:
int main() {
	DDRA &= ~(1 << PA2);
     7f2:	8a b3       	in	r24, 0x1a	; 26
     7f4:	8b 7f       	andi	r24, 0xFB	; 251
     7f6:	8a bb       	out	0x1a, r24	; 26
	DDRA &= ~(1 << PA3);
     7f8:	8a b3       	in	r24, 0x1a	; 26
     7fa:	87 7f       	andi	r24, 0xF7	; 247
     7fc:	8a bb       	out	0x1a, r24	; 26
	DDRA |= (1 << PA4); // RELAY CONTROL PIN INTO OUTPUT
     7fe:	8a b3       	in	r24, 0x1a	; 26
     800:	80 61       	ori	r24, 0x10	; 16
     802:	8a bb       	out	0x1a, r24	; 26
	ADC_Init();
     804:	0e 94 c6 00 	call	0x18c	; 0x18c <ADC_Init>
	lcdInit();
     808:	0e 94 08 01 	call	0x210	; 0x210 <lcdInit>
	initTimer();
     80c:	0e 94 c6 03 	call	0x78c	; 0x78c <initTimer>

	while (1) {
		Elec_Control();
     810:	0e 94 99 03 	call	0x732	; 0x732 <Elec_Control>
     814:	fd cf       	rjmp	.-6      	; 0x810 <__DATA_REGION_LENGTH__+0x10>

00000816 <__subsf3>:
     816:	50 58       	subi	r21, 0x80	; 128

00000818 <__addsf3>:
     818:	bb 27       	eor	r27, r27
     81a:	aa 27       	eor	r26, r26
     81c:	0e 94 23 04 	call	0x846	; 0x846 <__addsf3x>
     820:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_round>
     824:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscA>
     828:	38 f0       	brcs	.+14     	; 0x838 <__addsf3+0x20>
     82a:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_pscB>
     82e:	20 f0       	brcs	.+8      	; 0x838 <__addsf3+0x20>
     830:	39 f4       	brne	.+14     	; 0x840 <__addsf3+0x28>
     832:	9f 3f       	cpi	r25, 0xFF	; 255
     834:	19 f4       	brne	.+6      	; 0x83c <__addsf3+0x24>
     836:	26 f4       	brtc	.+8      	; 0x840 <__addsf3+0x28>
     838:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_nan>
     83c:	0e f4       	brtc	.+2      	; 0x840 <__addsf3+0x28>
     83e:	e0 95       	com	r30
     840:	e7 fb       	bst	r30, 7
     842:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>

00000846 <__addsf3x>:
     846:	e9 2f       	mov	r30, r25
     848:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
     84c:	58 f3       	brcs	.-42     	; 0x824 <__addsf3+0xc>
     84e:	ba 17       	cp	r27, r26
     850:	62 07       	cpc	r22, r18
     852:	73 07       	cpc	r23, r19
     854:	84 07       	cpc	r24, r20
     856:	95 07       	cpc	r25, r21
     858:	20 f0       	brcs	.+8      	; 0x862 <__stack+0x3>
     85a:	79 f4       	brne	.+30     	; 0x87a <__stack+0x1b>
     85c:	a6 f5       	brtc	.+104    	; 0x8c6 <__stack+0x67>
     85e:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__fp_zero>
     862:	0e f4       	brtc	.+2      	; 0x866 <__stack+0x7>
     864:	e0 95       	com	r30
     866:	0b 2e       	mov	r0, r27
     868:	ba 2f       	mov	r27, r26
     86a:	a0 2d       	mov	r26, r0
     86c:	0b 01       	movw	r0, r22
     86e:	b9 01       	movw	r22, r18
     870:	90 01       	movw	r18, r0
     872:	0c 01       	movw	r0, r24
     874:	ca 01       	movw	r24, r20
     876:	a0 01       	movw	r20, r0
     878:	11 24       	eor	r1, r1
     87a:	ff 27       	eor	r31, r31
     87c:	59 1b       	sub	r21, r25
     87e:	99 f0       	breq	.+38     	; 0x8a6 <__stack+0x47>
     880:	59 3f       	cpi	r21, 0xF9	; 249
     882:	50 f4       	brcc	.+20     	; 0x898 <__stack+0x39>
     884:	50 3e       	cpi	r21, 0xE0	; 224
     886:	68 f1       	brcs	.+90     	; 0x8e2 <__stack+0x83>
     888:	1a 16       	cp	r1, r26
     88a:	f0 40       	sbci	r31, 0x00	; 0
     88c:	a2 2f       	mov	r26, r18
     88e:	23 2f       	mov	r18, r19
     890:	34 2f       	mov	r19, r20
     892:	44 27       	eor	r20, r20
     894:	58 5f       	subi	r21, 0xF8	; 248
     896:	f3 cf       	rjmp	.-26     	; 0x87e <__stack+0x1f>
     898:	46 95       	lsr	r20
     89a:	37 95       	ror	r19
     89c:	27 95       	ror	r18
     89e:	a7 95       	ror	r26
     8a0:	f0 40       	sbci	r31, 0x00	; 0
     8a2:	53 95       	inc	r21
     8a4:	c9 f7       	brne	.-14     	; 0x898 <__stack+0x39>
     8a6:	7e f4       	brtc	.+30     	; 0x8c6 <__stack+0x67>
     8a8:	1f 16       	cp	r1, r31
     8aa:	ba 0b       	sbc	r27, r26
     8ac:	62 0b       	sbc	r22, r18
     8ae:	73 0b       	sbc	r23, r19
     8b0:	84 0b       	sbc	r24, r20
     8b2:	ba f0       	brmi	.+46     	; 0x8e2 <__stack+0x83>
     8b4:	91 50       	subi	r25, 0x01	; 1
     8b6:	a1 f0       	breq	.+40     	; 0x8e0 <__stack+0x81>
     8b8:	ff 0f       	add	r31, r31
     8ba:	bb 1f       	adc	r27, r27
     8bc:	66 1f       	adc	r22, r22
     8be:	77 1f       	adc	r23, r23
     8c0:	88 1f       	adc	r24, r24
     8c2:	c2 f7       	brpl	.-16     	; 0x8b4 <__stack+0x55>
     8c4:	0e c0       	rjmp	.+28     	; 0x8e2 <__stack+0x83>
     8c6:	ba 0f       	add	r27, r26
     8c8:	62 1f       	adc	r22, r18
     8ca:	73 1f       	adc	r23, r19
     8cc:	84 1f       	adc	r24, r20
     8ce:	48 f4       	brcc	.+18     	; 0x8e2 <__stack+0x83>
     8d0:	87 95       	ror	r24
     8d2:	77 95       	ror	r23
     8d4:	67 95       	ror	r22
     8d6:	b7 95       	ror	r27
     8d8:	f7 95       	ror	r31
     8da:	9e 3f       	cpi	r25, 0xFE	; 254
     8dc:	08 f0       	brcs	.+2      	; 0x8e0 <__stack+0x81>
     8de:	b0 cf       	rjmp	.-160    	; 0x840 <__addsf3+0x28>
     8e0:	93 95       	inc	r25
     8e2:	88 0f       	add	r24, r24
     8e4:	08 f0       	brcs	.+2      	; 0x8e8 <__stack+0x89>
     8e6:	99 27       	eor	r25, r25
     8e8:	ee 0f       	add	r30, r30
     8ea:	97 95       	ror	r25
     8ec:	87 95       	ror	r24
     8ee:	08 95       	ret

000008f0 <__cmpsf2>:
     8f0:	0e 94 2c 05 	call	0xa58	; 0xa58 <__fp_cmp>
     8f4:	08 f4       	brcc	.+2      	; 0x8f8 <__cmpsf2+0x8>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	08 95       	ret

000008fa <__divsf3>:
     8fa:	0e 94 91 04 	call	0x922	; 0x922 <__divsf3x>
     8fe:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_round>
     902:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_pscB>
     906:	58 f0       	brcs	.+22     	; 0x91e <__divsf3+0x24>
     908:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscA>
     90c:	40 f0       	brcs	.+16     	; 0x91e <__divsf3+0x24>
     90e:	29 f4       	brne	.+10     	; 0x91a <__divsf3+0x20>
     910:	5f 3f       	cpi	r21, 0xFF	; 255
     912:	29 f0       	breq	.+10     	; 0x91e <__divsf3+0x24>
     914:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
     918:	51 11       	cpse	r21, r1
     91a:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
     91e:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_nan>

00000922 <__divsf3x>:
     922:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
     926:	68 f3       	brcs	.-38     	; 0x902 <__divsf3+0x8>

00000928 <__divsf3_pse>:
     928:	99 23       	and	r25, r25
     92a:	b1 f3       	breq	.-20     	; 0x918 <__divsf3+0x1e>
     92c:	55 23       	and	r21, r21
     92e:	91 f3       	breq	.-28     	; 0x914 <__divsf3+0x1a>
     930:	95 1b       	sub	r25, r21
     932:	55 0b       	sbc	r21, r21
     934:	bb 27       	eor	r27, r27
     936:	aa 27       	eor	r26, r26
     938:	62 17       	cp	r22, r18
     93a:	73 07       	cpc	r23, r19
     93c:	84 07       	cpc	r24, r20
     93e:	38 f0       	brcs	.+14     	; 0x94e <__divsf3_pse+0x26>
     940:	9f 5f       	subi	r25, 0xFF	; 255
     942:	5f 4f       	sbci	r21, 0xFF	; 255
     944:	22 0f       	add	r18, r18
     946:	33 1f       	adc	r19, r19
     948:	44 1f       	adc	r20, r20
     94a:	aa 1f       	adc	r26, r26
     94c:	a9 f3       	breq	.-22     	; 0x938 <__divsf3_pse+0x10>
     94e:	35 d0       	rcall	.+106    	; 0x9ba <__divsf3_pse+0x92>
     950:	0e 2e       	mov	r0, r30
     952:	3a f0       	brmi	.+14     	; 0x962 <__divsf3_pse+0x3a>
     954:	e0 e8       	ldi	r30, 0x80	; 128
     956:	32 d0       	rcall	.+100    	; 0x9bc <__divsf3_pse+0x94>
     958:	91 50       	subi	r25, 0x01	; 1
     95a:	50 40       	sbci	r21, 0x00	; 0
     95c:	e6 95       	lsr	r30
     95e:	00 1c       	adc	r0, r0
     960:	ca f7       	brpl	.-14     	; 0x954 <__divsf3_pse+0x2c>
     962:	2b d0       	rcall	.+86     	; 0x9ba <__divsf3_pse+0x92>
     964:	fe 2f       	mov	r31, r30
     966:	29 d0       	rcall	.+82     	; 0x9ba <__divsf3_pse+0x92>
     968:	66 0f       	add	r22, r22
     96a:	77 1f       	adc	r23, r23
     96c:	88 1f       	adc	r24, r24
     96e:	bb 1f       	adc	r27, r27
     970:	26 17       	cp	r18, r22
     972:	37 07       	cpc	r19, r23
     974:	48 07       	cpc	r20, r24
     976:	ab 07       	cpc	r26, r27
     978:	b0 e8       	ldi	r27, 0x80	; 128
     97a:	09 f0       	breq	.+2      	; 0x97e <__divsf3_pse+0x56>
     97c:	bb 0b       	sbc	r27, r27
     97e:	80 2d       	mov	r24, r0
     980:	bf 01       	movw	r22, r30
     982:	ff 27       	eor	r31, r31
     984:	93 58       	subi	r25, 0x83	; 131
     986:	5f 4f       	sbci	r21, 0xFF	; 255
     988:	3a f0       	brmi	.+14     	; 0x998 <__divsf3_pse+0x70>
     98a:	9e 3f       	cpi	r25, 0xFE	; 254
     98c:	51 05       	cpc	r21, r1
     98e:	78 f0       	brcs	.+30     	; 0x9ae <__divsf3_pse+0x86>
     990:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
     994:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
     998:	5f 3f       	cpi	r21, 0xFF	; 255
     99a:	e4 f3       	brlt	.-8      	; 0x994 <__divsf3_pse+0x6c>
     99c:	98 3e       	cpi	r25, 0xE8	; 232
     99e:	d4 f3       	brlt	.-12     	; 0x994 <__divsf3_pse+0x6c>
     9a0:	86 95       	lsr	r24
     9a2:	77 95       	ror	r23
     9a4:	67 95       	ror	r22
     9a6:	b7 95       	ror	r27
     9a8:	f7 95       	ror	r31
     9aa:	9f 5f       	subi	r25, 0xFF	; 255
     9ac:	c9 f7       	brne	.-14     	; 0x9a0 <__divsf3_pse+0x78>
     9ae:	88 0f       	add	r24, r24
     9b0:	91 1d       	adc	r25, r1
     9b2:	96 95       	lsr	r25
     9b4:	87 95       	ror	r24
     9b6:	97 f9       	bld	r25, 7
     9b8:	08 95       	ret
     9ba:	e1 e0       	ldi	r30, 0x01	; 1
     9bc:	66 0f       	add	r22, r22
     9be:	77 1f       	adc	r23, r23
     9c0:	88 1f       	adc	r24, r24
     9c2:	bb 1f       	adc	r27, r27
     9c4:	62 17       	cp	r22, r18
     9c6:	73 07       	cpc	r23, r19
     9c8:	84 07       	cpc	r24, r20
     9ca:	ba 07       	cpc	r27, r26
     9cc:	20 f0       	brcs	.+8      	; 0x9d6 <__divsf3_pse+0xae>
     9ce:	62 1b       	sub	r22, r18
     9d0:	73 0b       	sbc	r23, r19
     9d2:	84 0b       	sbc	r24, r20
     9d4:	ba 0b       	sbc	r27, r26
     9d6:	ee 1f       	adc	r30, r30
     9d8:	88 f7       	brcc	.-30     	; 0x9bc <__divsf3_pse+0x94>
     9da:	e0 95       	com	r30
     9dc:	08 95       	ret

000009de <__floatunsisf>:
     9de:	e8 94       	clt
     9e0:	09 c0       	rjmp	.+18     	; 0x9f4 <__floatsisf+0x12>

000009e2 <__floatsisf>:
     9e2:	97 fb       	bst	r25, 7
     9e4:	3e f4       	brtc	.+14     	; 0x9f4 <__floatsisf+0x12>
     9e6:	90 95       	com	r25
     9e8:	80 95       	com	r24
     9ea:	70 95       	com	r23
     9ec:	61 95       	neg	r22
     9ee:	7f 4f       	sbci	r23, 0xFF	; 255
     9f0:	8f 4f       	sbci	r24, 0xFF	; 255
     9f2:	9f 4f       	sbci	r25, 0xFF	; 255
     9f4:	99 23       	and	r25, r25
     9f6:	a9 f0       	breq	.+42     	; 0xa22 <__floatsisf+0x40>
     9f8:	f9 2f       	mov	r31, r25
     9fa:	96 e9       	ldi	r25, 0x96	; 150
     9fc:	bb 27       	eor	r27, r27
     9fe:	93 95       	inc	r25
     a00:	f6 95       	lsr	r31
     a02:	87 95       	ror	r24
     a04:	77 95       	ror	r23
     a06:	67 95       	ror	r22
     a08:	b7 95       	ror	r27
     a0a:	f1 11       	cpse	r31, r1
     a0c:	f8 cf       	rjmp	.-16     	; 0x9fe <__floatsisf+0x1c>
     a0e:	fa f4       	brpl	.+62     	; 0xa4e <__floatsisf+0x6c>
     a10:	bb 0f       	add	r27, r27
     a12:	11 f4       	brne	.+4      	; 0xa18 <__floatsisf+0x36>
     a14:	60 ff       	sbrs	r22, 0
     a16:	1b c0       	rjmp	.+54     	; 0xa4e <__floatsisf+0x6c>
     a18:	6f 5f       	subi	r22, 0xFF	; 255
     a1a:	7f 4f       	sbci	r23, 0xFF	; 255
     a1c:	8f 4f       	sbci	r24, 0xFF	; 255
     a1e:	9f 4f       	sbci	r25, 0xFF	; 255
     a20:	16 c0       	rjmp	.+44     	; 0xa4e <__floatsisf+0x6c>
     a22:	88 23       	and	r24, r24
     a24:	11 f0       	breq	.+4      	; 0xa2a <__floatsisf+0x48>
     a26:	96 e9       	ldi	r25, 0x96	; 150
     a28:	11 c0       	rjmp	.+34     	; 0xa4c <__floatsisf+0x6a>
     a2a:	77 23       	and	r23, r23
     a2c:	21 f0       	breq	.+8      	; 0xa36 <__floatsisf+0x54>
     a2e:	9e e8       	ldi	r25, 0x8E	; 142
     a30:	87 2f       	mov	r24, r23
     a32:	76 2f       	mov	r23, r22
     a34:	05 c0       	rjmp	.+10     	; 0xa40 <__floatsisf+0x5e>
     a36:	66 23       	and	r22, r22
     a38:	71 f0       	breq	.+28     	; 0xa56 <__floatsisf+0x74>
     a3a:	96 e8       	ldi	r25, 0x86	; 134
     a3c:	86 2f       	mov	r24, r22
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	2a f0       	brmi	.+10     	; 0xa4e <__floatsisf+0x6c>
     a44:	9a 95       	dec	r25
     a46:	66 0f       	add	r22, r22
     a48:	77 1f       	adc	r23, r23
     a4a:	88 1f       	adc	r24, r24
     a4c:	da f7       	brpl	.-10     	; 0xa44 <__floatsisf+0x62>
     a4e:	88 0f       	add	r24, r24
     a50:	96 95       	lsr	r25
     a52:	87 95       	ror	r24
     a54:	97 f9       	bld	r25, 7
     a56:	08 95       	ret

00000a58 <__fp_cmp>:
     a58:	99 0f       	add	r25, r25
     a5a:	00 08       	sbc	r0, r0
     a5c:	55 0f       	add	r21, r21
     a5e:	aa 0b       	sbc	r26, r26
     a60:	e0 e8       	ldi	r30, 0x80	; 128
     a62:	fe ef       	ldi	r31, 0xFE	; 254
     a64:	16 16       	cp	r1, r22
     a66:	17 06       	cpc	r1, r23
     a68:	e8 07       	cpc	r30, r24
     a6a:	f9 07       	cpc	r31, r25
     a6c:	c0 f0       	brcs	.+48     	; 0xa9e <__fp_cmp+0x46>
     a6e:	12 16       	cp	r1, r18
     a70:	13 06       	cpc	r1, r19
     a72:	e4 07       	cpc	r30, r20
     a74:	f5 07       	cpc	r31, r21
     a76:	98 f0       	brcs	.+38     	; 0xa9e <__fp_cmp+0x46>
     a78:	62 1b       	sub	r22, r18
     a7a:	73 0b       	sbc	r23, r19
     a7c:	84 0b       	sbc	r24, r20
     a7e:	95 0b       	sbc	r25, r21
     a80:	39 f4       	brne	.+14     	; 0xa90 <__fp_cmp+0x38>
     a82:	0a 26       	eor	r0, r26
     a84:	61 f0       	breq	.+24     	; 0xa9e <__fp_cmp+0x46>
     a86:	23 2b       	or	r18, r19
     a88:	24 2b       	or	r18, r20
     a8a:	25 2b       	or	r18, r21
     a8c:	21 f4       	brne	.+8      	; 0xa96 <__fp_cmp+0x3e>
     a8e:	08 95       	ret
     a90:	0a 26       	eor	r0, r26
     a92:	09 f4       	brne	.+2      	; 0xa96 <__fp_cmp+0x3e>
     a94:	a1 40       	sbci	r26, 0x01	; 1
     a96:	a6 95       	lsr	r26
     a98:	8f ef       	ldi	r24, 0xFF	; 255
     a9a:	81 1d       	adc	r24, r1
     a9c:	81 1d       	adc	r24, r1
     a9e:	08 95       	ret

00000aa0 <__fp_inf>:
     aa0:	97 f9       	bld	r25, 7
     aa2:	9f 67       	ori	r25, 0x7F	; 127
     aa4:	80 e8       	ldi	r24, 0x80	; 128
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	08 95       	ret

00000aac <__fp_nan>:
     aac:	9f ef       	ldi	r25, 0xFF	; 255
     aae:	80 ec       	ldi	r24, 0xC0	; 192
     ab0:	08 95       	ret

00000ab2 <__fp_pscA>:
     ab2:	00 24       	eor	r0, r0
     ab4:	0a 94       	dec	r0
     ab6:	16 16       	cp	r1, r22
     ab8:	17 06       	cpc	r1, r23
     aba:	18 06       	cpc	r1, r24
     abc:	09 06       	cpc	r0, r25
     abe:	08 95       	ret

00000ac0 <__fp_pscB>:
     ac0:	00 24       	eor	r0, r0
     ac2:	0a 94       	dec	r0
     ac4:	12 16       	cp	r1, r18
     ac6:	13 06       	cpc	r1, r19
     ac8:	14 06       	cpc	r1, r20
     aca:	05 06       	cpc	r0, r21
     acc:	08 95       	ret

00000ace <__fp_round>:
     ace:	09 2e       	mov	r0, r25
     ad0:	03 94       	inc	r0
     ad2:	00 0c       	add	r0, r0
     ad4:	11 f4       	brne	.+4      	; 0xada <__fp_round+0xc>
     ad6:	88 23       	and	r24, r24
     ad8:	52 f0       	brmi	.+20     	; 0xaee <__fp_round+0x20>
     ada:	bb 0f       	add	r27, r27
     adc:	40 f4       	brcc	.+16     	; 0xaee <__fp_round+0x20>
     ade:	bf 2b       	or	r27, r31
     ae0:	11 f4       	brne	.+4      	; 0xae6 <__fp_round+0x18>
     ae2:	60 ff       	sbrs	r22, 0
     ae4:	04 c0       	rjmp	.+8      	; 0xaee <__fp_round+0x20>
     ae6:	6f 5f       	subi	r22, 0xFF	; 255
     ae8:	7f 4f       	sbci	r23, 0xFF	; 255
     aea:	8f 4f       	sbci	r24, 0xFF	; 255
     aec:	9f 4f       	sbci	r25, 0xFF	; 255
     aee:	08 95       	ret

00000af0 <__fp_split3>:
     af0:	57 fd       	sbrc	r21, 7
     af2:	90 58       	subi	r25, 0x80	; 128
     af4:	44 0f       	add	r20, r20
     af6:	55 1f       	adc	r21, r21
     af8:	59 f0       	breq	.+22     	; 0xb10 <__fp_splitA+0x10>
     afa:	5f 3f       	cpi	r21, 0xFF	; 255
     afc:	71 f0       	breq	.+28     	; 0xb1a <__fp_splitA+0x1a>
     afe:	47 95       	ror	r20

00000b00 <__fp_splitA>:
     b00:	88 0f       	add	r24, r24
     b02:	97 fb       	bst	r25, 7
     b04:	99 1f       	adc	r25, r25
     b06:	61 f0       	breq	.+24     	; 0xb20 <__fp_splitA+0x20>
     b08:	9f 3f       	cpi	r25, 0xFF	; 255
     b0a:	79 f0       	breq	.+30     	; 0xb2a <__fp_splitA+0x2a>
     b0c:	87 95       	ror	r24
     b0e:	08 95       	ret
     b10:	12 16       	cp	r1, r18
     b12:	13 06       	cpc	r1, r19
     b14:	14 06       	cpc	r1, r20
     b16:	55 1f       	adc	r21, r21
     b18:	f2 cf       	rjmp	.-28     	; 0xafe <__fp_split3+0xe>
     b1a:	46 95       	lsr	r20
     b1c:	f1 df       	rcall	.-30     	; 0xb00 <__fp_splitA>
     b1e:	08 c0       	rjmp	.+16     	; 0xb30 <__fp_splitA+0x30>
     b20:	16 16       	cp	r1, r22
     b22:	17 06       	cpc	r1, r23
     b24:	18 06       	cpc	r1, r24
     b26:	99 1f       	adc	r25, r25
     b28:	f1 cf       	rjmp	.-30     	; 0xb0c <__fp_splitA+0xc>
     b2a:	86 95       	lsr	r24
     b2c:	71 05       	cpc	r23, r1
     b2e:	61 05       	cpc	r22, r1
     b30:	08 94       	sec
     b32:	08 95       	ret

00000b34 <__fp_zero>:
     b34:	e8 94       	clt

00000b36 <__fp_szero>:
     b36:	bb 27       	eor	r27, r27
     b38:	66 27       	eor	r22, r22
     b3a:	77 27       	eor	r23, r23
     b3c:	cb 01       	movw	r24, r22
     b3e:	97 f9       	bld	r25, 7
     b40:	08 95       	ret

00000b42 <__mulsf3>:
     b42:	0e 94 b4 05 	call	0xb68	; 0xb68 <__mulsf3x>
     b46:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_round>
     b4a:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscA>
     b4e:	38 f0       	brcs	.+14     	; 0xb5e <__mulsf3+0x1c>
     b50:	0e 94 60 05 	call	0xac0	; 0xac0 <__fp_pscB>
     b54:	20 f0       	brcs	.+8      	; 0xb5e <__mulsf3+0x1c>
     b56:	95 23       	and	r25, r21
     b58:	11 f0       	breq	.+4      	; 0xb5e <__mulsf3+0x1c>
     b5a:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
     b5e:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_nan>
     b62:	11 24       	eor	r1, r1
     b64:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>

00000b68 <__mulsf3x>:
     b68:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_split3>
     b6c:	70 f3       	brcs	.-36     	; 0xb4a <__mulsf3+0x8>

00000b6e <__mulsf3_pse>:
     b6e:	95 9f       	mul	r25, r21
     b70:	c1 f3       	breq	.-16     	; 0xb62 <__mulsf3+0x20>
     b72:	95 0f       	add	r25, r21
     b74:	50 e0       	ldi	r21, 0x00	; 0
     b76:	55 1f       	adc	r21, r21
     b78:	62 9f       	mul	r22, r18
     b7a:	f0 01       	movw	r30, r0
     b7c:	72 9f       	mul	r23, r18
     b7e:	bb 27       	eor	r27, r27
     b80:	f0 0d       	add	r31, r0
     b82:	b1 1d       	adc	r27, r1
     b84:	63 9f       	mul	r22, r19
     b86:	aa 27       	eor	r26, r26
     b88:	f0 0d       	add	r31, r0
     b8a:	b1 1d       	adc	r27, r1
     b8c:	aa 1f       	adc	r26, r26
     b8e:	64 9f       	mul	r22, r20
     b90:	66 27       	eor	r22, r22
     b92:	b0 0d       	add	r27, r0
     b94:	a1 1d       	adc	r26, r1
     b96:	66 1f       	adc	r22, r22
     b98:	82 9f       	mul	r24, r18
     b9a:	22 27       	eor	r18, r18
     b9c:	b0 0d       	add	r27, r0
     b9e:	a1 1d       	adc	r26, r1
     ba0:	62 1f       	adc	r22, r18
     ba2:	73 9f       	mul	r23, r19
     ba4:	b0 0d       	add	r27, r0
     ba6:	a1 1d       	adc	r26, r1
     ba8:	62 1f       	adc	r22, r18
     baa:	83 9f       	mul	r24, r19
     bac:	a0 0d       	add	r26, r0
     bae:	61 1d       	adc	r22, r1
     bb0:	22 1f       	adc	r18, r18
     bb2:	74 9f       	mul	r23, r20
     bb4:	33 27       	eor	r19, r19
     bb6:	a0 0d       	add	r26, r0
     bb8:	61 1d       	adc	r22, r1
     bba:	23 1f       	adc	r18, r19
     bbc:	84 9f       	mul	r24, r20
     bbe:	60 0d       	add	r22, r0
     bc0:	21 1d       	adc	r18, r1
     bc2:	82 2f       	mov	r24, r18
     bc4:	76 2f       	mov	r23, r22
     bc6:	6a 2f       	mov	r22, r26
     bc8:	11 24       	eor	r1, r1
     bca:	9f 57       	subi	r25, 0x7F	; 127
     bcc:	50 40       	sbci	r21, 0x00	; 0
     bce:	9a f0       	brmi	.+38     	; 0xbf6 <__mulsf3_pse+0x88>
     bd0:	f1 f0       	breq	.+60     	; 0xc0e <__mulsf3_pse+0xa0>
     bd2:	88 23       	and	r24, r24
     bd4:	4a f0       	brmi	.+18     	; 0xbe8 <__mulsf3_pse+0x7a>
     bd6:	ee 0f       	add	r30, r30
     bd8:	ff 1f       	adc	r31, r31
     bda:	bb 1f       	adc	r27, r27
     bdc:	66 1f       	adc	r22, r22
     bde:	77 1f       	adc	r23, r23
     be0:	88 1f       	adc	r24, r24
     be2:	91 50       	subi	r25, 0x01	; 1
     be4:	50 40       	sbci	r21, 0x00	; 0
     be6:	a9 f7       	brne	.-22     	; 0xbd2 <__mulsf3_pse+0x64>
     be8:	9e 3f       	cpi	r25, 0xFE	; 254
     bea:	51 05       	cpc	r21, r1
     bec:	80 f0       	brcs	.+32     	; 0xc0e <__mulsf3_pse+0xa0>
     bee:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__fp_inf>
     bf2:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_szero>
     bf6:	5f 3f       	cpi	r21, 0xFF	; 255
     bf8:	e4 f3       	brlt	.-8      	; 0xbf2 <__mulsf3_pse+0x84>
     bfa:	98 3e       	cpi	r25, 0xE8	; 232
     bfc:	d4 f3       	brlt	.-12     	; 0xbf2 <__mulsf3_pse+0x84>
     bfe:	86 95       	lsr	r24
     c00:	77 95       	ror	r23
     c02:	67 95       	ror	r22
     c04:	b7 95       	ror	r27
     c06:	f7 95       	ror	r31
     c08:	e7 95       	ror	r30
     c0a:	9f 5f       	subi	r25, 0xFF	; 255
     c0c:	c1 f7       	brne	.-16     	; 0xbfe <__mulsf3_pse+0x90>
     c0e:	fe 2b       	or	r31, r30
     c10:	88 0f       	add	r24, r24
     c12:	91 1d       	adc	r25, r1
     c14:	96 95       	lsr	r25
     c16:	87 95       	ror	r24
     c18:	97 f9       	bld	r25, 7
     c1a:	08 95       	ret

00000c1c <dtostrf>:
     c1c:	ef 92       	push	r14
     c1e:	0f 93       	push	r16
     c20:	1f 93       	push	r17
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	e8 01       	movw	r28, r16
     c28:	47 fd       	sbrc	r20, 7
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <dtostrf+0x14>
     c2c:	34 e0       	ldi	r19, 0x04	; 4
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <dtostrf+0x16>
     c30:	34 e1       	ldi	r19, 0x14	; 20
     c32:	04 2e       	mov	r0, r20
     c34:	00 0c       	add	r0, r0
     c36:	55 0b       	sbc	r21, r21
     c38:	57 ff       	sbrs	r21, 7
     c3a:	03 c0       	rjmp	.+6      	; 0xc42 <dtostrf+0x26>
     c3c:	51 95       	neg	r21
     c3e:	41 95       	neg	r20
     c40:	51 09       	sbc	r21, r1
     c42:	e3 2e       	mov	r14, r19
     c44:	02 2f       	mov	r16, r18
     c46:	24 2f       	mov	r18, r20
     c48:	ae 01       	movw	r20, r28
     c4a:	0e 94 39 06 	call	0xc72	; 0xc72 <dtoa_prf>
     c4e:	ce 01       	movw	r24, r28
     c50:	df 91       	pop	r29
     c52:	cf 91       	pop	r28
     c54:	1f 91       	pop	r17
     c56:	0f 91       	pop	r16
     c58:	ef 90       	pop	r14
     c5a:	08 95       	ret

00000c5c <strcat>:
     c5c:	fb 01       	movw	r30, r22
     c5e:	dc 01       	movw	r26, r24
     c60:	0d 90       	ld	r0, X+
     c62:	00 20       	and	r0, r0
     c64:	e9 f7       	brne	.-6      	; 0xc60 <strcat+0x4>
     c66:	11 97       	sbiw	r26, 0x01	; 1
     c68:	01 90       	ld	r0, Z+
     c6a:	0d 92       	st	X+, r0
     c6c:	00 20       	and	r0, r0
     c6e:	e1 f7       	brne	.-8      	; 0xc68 <strcat+0xc>
     c70:	08 95       	ret

00000c72 <dtoa_prf>:
     c72:	a9 e0       	ldi	r26, 0x09	; 9
     c74:	b0 e0       	ldi	r27, 0x00	; 0
     c76:	ef e3       	ldi	r30, 0x3F	; 63
     c78:	f6 e0       	ldi	r31, 0x06	; 6
     c7a:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0xc>
     c7e:	6a 01       	movw	r12, r20
     c80:	12 2f       	mov	r17, r18
     c82:	b0 2e       	mov	r11, r16
     c84:	2b e3       	ldi	r18, 0x3B	; 59
     c86:	20 17       	cp	r18, r16
     c88:	20 f0       	brcs	.+8      	; 0xc92 <dtoa_prf+0x20>
     c8a:	ff 24       	eor	r15, r15
     c8c:	f3 94       	inc	r15
     c8e:	f0 0e       	add	r15, r16
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <dtoa_prf+0x24>
     c92:	2c e3       	ldi	r18, 0x3C	; 60
     c94:	f2 2e       	mov	r15, r18
     c96:	0f 2d       	mov	r16, r15
     c98:	27 e0       	ldi	r18, 0x07	; 7
     c9a:	ae 01       	movw	r20, r28
     c9c:	4f 5f       	subi	r20, 0xFF	; 255
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	0e 94 93 07 	call	0xf26	; 0xf26 <__ftoa_engine>
     ca4:	bc 01       	movw	r22, r24
     ca6:	49 81       	ldd	r20, Y+1	; 0x01
     ca8:	84 2f       	mov	r24, r20
     caa:	89 70       	andi	r24, 0x09	; 9
     cac:	81 30       	cpi	r24, 0x01	; 1
     cae:	31 f0       	breq	.+12     	; 0xcbc <dtoa_prf+0x4a>
     cb0:	e1 fc       	sbrc	r14, 1
     cb2:	06 c0       	rjmp	.+12     	; 0xcc0 <dtoa_prf+0x4e>
     cb4:	e0 fe       	sbrs	r14, 0
     cb6:	06 c0       	rjmp	.+12     	; 0xcc4 <dtoa_prf+0x52>
     cb8:	90 e2       	ldi	r25, 0x20	; 32
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <dtoa_prf+0x54>
     cbc:	9d e2       	ldi	r25, 0x2D	; 45
     cbe:	03 c0       	rjmp	.+6      	; 0xcc6 <dtoa_prf+0x54>
     cc0:	9b e2       	ldi	r25, 0x2B	; 43
     cc2:	01 c0       	rjmp	.+2      	; 0xcc6 <dtoa_prf+0x54>
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	5e 2d       	mov	r21, r14
     cc8:	50 71       	andi	r21, 0x10	; 16
     cca:	43 ff       	sbrs	r20, 3
     ccc:	3c c0       	rjmp	.+120    	; 0xd46 <dtoa_prf+0xd4>
     cce:	91 11       	cpse	r25, r1
     cd0:	02 c0       	rjmp	.+4      	; 0xcd6 <dtoa_prf+0x64>
     cd2:	83 e0       	ldi	r24, 0x03	; 3
     cd4:	01 c0       	rjmp	.+2      	; 0xcd8 <dtoa_prf+0x66>
     cd6:	84 e0       	ldi	r24, 0x04	; 4
     cd8:	81 17       	cp	r24, r17
     cda:	18 f4       	brcc	.+6      	; 0xce2 <dtoa_prf+0x70>
     cdc:	21 2f       	mov	r18, r17
     cde:	28 1b       	sub	r18, r24
     ce0:	01 c0       	rjmp	.+2      	; 0xce4 <dtoa_prf+0x72>
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	51 11       	cpse	r21, r1
     ce6:	0b c0       	rjmp	.+22     	; 0xcfe <dtoa_prf+0x8c>
     ce8:	f6 01       	movw	r30, r12
     cea:	82 2f       	mov	r24, r18
     cec:	30 e2       	ldi	r19, 0x20	; 32
     cee:	88 23       	and	r24, r24
     cf0:	19 f0       	breq	.+6      	; 0xcf8 <dtoa_prf+0x86>
     cf2:	31 93       	st	Z+, r19
     cf4:	81 50       	subi	r24, 0x01	; 1
     cf6:	fb cf       	rjmp	.-10     	; 0xcee <dtoa_prf+0x7c>
     cf8:	c2 0e       	add	r12, r18
     cfa:	d1 1c       	adc	r13, r1
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	99 23       	and	r25, r25
     d00:	29 f0       	breq	.+10     	; 0xd0c <dtoa_prf+0x9a>
     d02:	d6 01       	movw	r26, r12
     d04:	9c 93       	st	X, r25
     d06:	f6 01       	movw	r30, r12
     d08:	31 96       	adiw	r30, 0x01	; 1
     d0a:	6f 01       	movw	r12, r30
     d0c:	c6 01       	movw	r24, r12
     d0e:	03 96       	adiw	r24, 0x03	; 3
     d10:	e2 fe       	sbrs	r14, 2
     d12:	0a c0       	rjmp	.+20     	; 0xd28 <dtoa_prf+0xb6>
     d14:	3e e4       	ldi	r19, 0x4E	; 78
     d16:	d6 01       	movw	r26, r12
     d18:	3c 93       	st	X, r19
     d1a:	41 e4       	ldi	r20, 0x41	; 65
     d1c:	11 96       	adiw	r26, 0x01	; 1
     d1e:	4c 93       	st	X, r20
     d20:	11 97       	sbiw	r26, 0x01	; 1
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	3c 93       	st	X, r19
     d26:	06 c0       	rjmp	.+12     	; 0xd34 <dtoa_prf+0xc2>
     d28:	3e e6       	ldi	r19, 0x6E	; 110
     d2a:	f6 01       	movw	r30, r12
     d2c:	30 83       	st	Z, r19
     d2e:	41 e6       	ldi	r20, 0x61	; 97
     d30:	41 83       	std	Z+1, r20	; 0x01
     d32:	32 83       	std	Z+2, r19	; 0x02
     d34:	fc 01       	movw	r30, r24
     d36:	32 2f       	mov	r19, r18
     d38:	40 e2       	ldi	r20, 0x20	; 32
     d3a:	33 23       	and	r19, r19
     d3c:	09 f4       	brne	.+2      	; 0xd40 <dtoa_prf+0xce>
     d3e:	42 c0       	rjmp	.+132    	; 0xdc4 <dtoa_prf+0x152>
     d40:	41 93       	st	Z+, r20
     d42:	31 50       	subi	r19, 0x01	; 1
     d44:	fa cf       	rjmp	.-12     	; 0xd3a <dtoa_prf+0xc8>
     d46:	42 ff       	sbrs	r20, 2
     d48:	44 c0       	rjmp	.+136    	; 0xdd2 <dtoa_prf+0x160>
     d4a:	91 11       	cpse	r25, r1
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <dtoa_prf+0xe0>
     d4e:	83 e0       	ldi	r24, 0x03	; 3
     d50:	01 c0       	rjmp	.+2      	; 0xd54 <dtoa_prf+0xe2>
     d52:	84 e0       	ldi	r24, 0x04	; 4
     d54:	81 17       	cp	r24, r17
     d56:	18 f4       	brcc	.+6      	; 0xd5e <dtoa_prf+0xec>
     d58:	21 2f       	mov	r18, r17
     d5a:	28 1b       	sub	r18, r24
     d5c:	01 c0       	rjmp	.+2      	; 0xd60 <dtoa_prf+0xee>
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	51 11       	cpse	r21, r1
     d62:	0b c0       	rjmp	.+22     	; 0xd7a <dtoa_prf+0x108>
     d64:	f6 01       	movw	r30, r12
     d66:	82 2f       	mov	r24, r18
     d68:	30 e2       	ldi	r19, 0x20	; 32
     d6a:	88 23       	and	r24, r24
     d6c:	19 f0       	breq	.+6      	; 0xd74 <dtoa_prf+0x102>
     d6e:	31 93       	st	Z+, r19
     d70:	81 50       	subi	r24, 0x01	; 1
     d72:	fb cf       	rjmp	.-10     	; 0xd6a <dtoa_prf+0xf8>
     d74:	c2 0e       	add	r12, r18
     d76:	d1 1c       	adc	r13, r1
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	99 23       	and	r25, r25
     d7c:	29 f0       	breq	.+10     	; 0xd88 <dtoa_prf+0x116>
     d7e:	d6 01       	movw	r26, r12
     d80:	9c 93       	st	X, r25
     d82:	f6 01       	movw	r30, r12
     d84:	31 96       	adiw	r30, 0x01	; 1
     d86:	6f 01       	movw	r12, r30
     d88:	c6 01       	movw	r24, r12
     d8a:	03 96       	adiw	r24, 0x03	; 3
     d8c:	e2 fe       	sbrs	r14, 2
     d8e:	0b c0       	rjmp	.+22     	; 0xda6 <dtoa_prf+0x134>
     d90:	39 e4       	ldi	r19, 0x49	; 73
     d92:	d6 01       	movw	r26, r12
     d94:	3c 93       	st	X, r19
     d96:	3e e4       	ldi	r19, 0x4E	; 78
     d98:	11 96       	adiw	r26, 0x01	; 1
     d9a:	3c 93       	st	X, r19
     d9c:	11 97       	sbiw	r26, 0x01	; 1
     d9e:	36 e4       	ldi	r19, 0x46	; 70
     da0:	12 96       	adiw	r26, 0x02	; 2
     da2:	3c 93       	st	X, r19
     da4:	07 c0       	rjmp	.+14     	; 0xdb4 <dtoa_prf+0x142>
     da6:	39 e6       	ldi	r19, 0x69	; 105
     da8:	f6 01       	movw	r30, r12
     daa:	30 83       	st	Z, r19
     dac:	3e e6       	ldi	r19, 0x6E	; 110
     dae:	31 83       	std	Z+1, r19	; 0x01
     db0:	36 e6       	ldi	r19, 0x66	; 102
     db2:	32 83       	std	Z+2, r19	; 0x02
     db4:	fc 01       	movw	r30, r24
     db6:	32 2f       	mov	r19, r18
     db8:	40 e2       	ldi	r20, 0x20	; 32
     dba:	33 23       	and	r19, r19
     dbc:	19 f0       	breq	.+6      	; 0xdc4 <dtoa_prf+0x152>
     dbe:	41 93       	st	Z+, r20
     dc0:	31 50       	subi	r19, 0x01	; 1
     dc2:	fb cf       	rjmp	.-10     	; 0xdba <dtoa_prf+0x148>
     dc4:	fc 01       	movw	r30, r24
     dc6:	e2 0f       	add	r30, r18
     dc8:	f1 1d       	adc	r31, r1
     dca:	10 82       	st	Z, r1
     dcc:	8e ef       	ldi	r24, 0xFE	; 254
     dce:	9f ef       	ldi	r25, 0xFF	; 255
     dd0:	a6 c0       	rjmp	.+332    	; 0xf1e <dtoa_prf+0x2ac>
     dd2:	21 e0       	ldi	r18, 0x01	; 1
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	91 11       	cpse	r25, r1
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <dtoa_prf+0x16c>
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	16 16       	cp	r1, r22
     de0:	17 06       	cpc	r1, r23
     de2:	1c f4       	brge	.+6      	; 0xdea <dtoa_prf+0x178>
     de4:	fb 01       	movw	r30, r22
     de6:	31 96       	adiw	r30, 0x01	; 1
     de8:	02 c0       	rjmp	.+4      	; 0xdee <dtoa_prf+0x17c>
     dea:	e1 e0       	ldi	r30, 0x01	; 1
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	2e 0f       	add	r18, r30
     df0:	3f 1f       	adc	r19, r31
     df2:	bb 20       	and	r11, r11
     df4:	21 f0       	breq	.+8      	; 0xdfe <dtoa_prf+0x18c>
     df6:	eb 2d       	mov	r30, r11
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	31 96       	adiw	r30, 0x01	; 1
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <dtoa_prf+0x190>
     dfe:	e0 e0       	ldi	r30, 0x00	; 0
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	2e 0f       	add	r18, r30
     e04:	3f 1f       	adc	r19, r31
     e06:	e1 2f       	mov	r30, r17
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	2e 17       	cp	r18, r30
     e0c:	3f 07       	cpc	r19, r31
     e0e:	1c f4       	brge	.+6      	; 0xe16 <dtoa_prf+0x1a4>
     e10:	12 1b       	sub	r17, r18
     e12:	21 2f       	mov	r18, r17
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <dtoa_prf+0x1a6>
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	8e 2d       	mov	r24, r14
     e1a:	88 71       	andi	r24, 0x18	; 24
     e1c:	59 f4       	brne	.+22     	; 0xe34 <dtoa_prf+0x1c2>
     e1e:	f6 01       	movw	r30, r12
     e20:	82 2f       	mov	r24, r18
     e22:	30 e2       	ldi	r19, 0x20	; 32
     e24:	88 23       	and	r24, r24
     e26:	19 f0       	breq	.+6      	; 0xe2e <dtoa_prf+0x1bc>
     e28:	31 93       	st	Z+, r19
     e2a:	81 50       	subi	r24, 0x01	; 1
     e2c:	fb cf       	rjmp	.-10     	; 0xe24 <dtoa_prf+0x1b2>
     e2e:	c2 0e       	add	r12, r18
     e30:	d1 1c       	adc	r13, r1
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	99 23       	and	r25, r25
     e36:	29 f0       	breq	.+10     	; 0xe42 <dtoa_prf+0x1d0>
     e38:	d6 01       	movw	r26, r12
     e3a:	9c 93       	st	X, r25
     e3c:	f6 01       	movw	r30, r12
     e3e:	31 96       	adiw	r30, 0x01	; 1
     e40:	6f 01       	movw	r12, r30
     e42:	51 11       	cpse	r21, r1
     e44:	0b c0       	rjmp	.+22     	; 0xe5c <dtoa_prf+0x1ea>
     e46:	f6 01       	movw	r30, r12
     e48:	82 2f       	mov	r24, r18
     e4a:	90 e3       	ldi	r25, 0x30	; 48
     e4c:	88 23       	and	r24, r24
     e4e:	19 f0       	breq	.+6      	; 0xe56 <dtoa_prf+0x1e4>
     e50:	91 93       	st	Z+, r25
     e52:	81 50       	subi	r24, 0x01	; 1
     e54:	fb cf       	rjmp	.-10     	; 0xe4c <dtoa_prf+0x1da>
     e56:	c2 0e       	add	r12, r18
     e58:	d1 1c       	adc	r13, r1
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	0f 2d       	mov	r16, r15
     e5e:	06 0f       	add	r16, r22
     e60:	9a 81       	ldd	r25, Y+2	; 0x02
     e62:	34 2f       	mov	r19, r20
     e64:	30 71       	andi	r19, 0x10	; 16
     e66:	44 ff       	sbrs	r20, 4
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <dtoa_prf+0x1fe>
     e6a:	91 33       	cpi	r25, 0x31	; 49
     e6c:	09 f4       	brne	.+2      	; 0xe70 <dtoa_prf+0x1fe>
     e6e:	01 50       	subi	r16, 0x01	; 1
     e70:	10 16       	cp	r1, r16
     e72:	24 f4       	brge	.+8      	; 0xe7c <dtoa_prf+0x20a>
     e74:	09 30       	cpi	r16, 0x09	; 9
     e76:	18 f0       	brcs	.+6      	; 0xe7e <dtoa_prf+0x20c>
     e78:	08 e0       	ldi	r16, 0x08	; 8
     e7a:	01 c0       	rjmp	.+2      	; 0xe7e <dtoa_prf+0x20c>
     e7c:	01 e0       	ldi	r16, 0x01	; 1
     e7e:	ab 01       	movw	r20, r22
     e80:	77 ff       	sbrs	r23, 7
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <dtoa_prf+0x216>
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	fb 01       	movw	r30, r22
     e8a:	e4 1b       	sub	r30, r20
     e8c:	f5 0b       	sbc	r31, r21
     e8e:	a1 e0       	ldi	r26, 0x01	; 1
     e90:	b0 e0       	ldi	r27, 0x00	; 0
     e92:	ac 0f       	add	r26, r28
     e94:	bd 1f       	adc	r27, r29
     e96:	ea 0f       	add	r30, r26
     e98:	fb 1f       	adc	r31, r27
     e9a:	8e e2       	ldi	r24, 0x2E	; 46
     e9c:	a8 2e       	mov	r10, r24
     e9e:	4b 01       	movw	r8, r22
     ea0:	80 1a       	sub	r8, r16
     ea2:	91 08       	sbc	r9, r1
     ea4:	0b 2d       	mov	r16, r11
     ea6:	10 e0       	ldi	r17, 0x00	; 0
     ea8:	11 95       	neg	r17
     eaa:	01 95       	neg	r16
     eac:	11 09       	sbc	r17, r1
     eae:	4f 3f       	cpi	r20, 0xFF	; 255
     eb0:	bf ef       	ldi	r27, 0xFF	; 255
     eb2:	5b 07       	cpc	r21, r27
     eb4:	21 f4       	brne	.+8      	; 0xebe <dtoa_prf+0x24c>
     eb6:	d6 01       	movw	r26, r12
     eb8:	ac 92       	st	X, r10
     eba:	11 96       	adiw	r26, 0x01	; 1
     ebc:	6d 01       	movw	r12, r26
     ebe:	64 17       	cp	r22, r20
     ec0:	75 07       	cpc	r23, r21
     ec2:	2c f0       	brlt	.+10     	; 0xece <dtoa_prf+0x25c>
     ec4:	84 16       	cp	r8, r20
     ec6:	95 06       	cpc	r9, r21
     ec8:	14 f4       	brge	.+4      	; 0xece <dtoa_prf+0x25c>
     eca:	81 81       	ldd	r24, Z+1	; 0x01
     ecc:	01 c0       	rjmp	.+2      	; 0xed0 <dtoa_prf+0x25e>
     ece:	80 e3       	ldi	r24, 0x30	; 48
     ed0:	41 50       	subi	r20, 0x01	; 1
     ed2:	51 09       	sbc	r21, r1
     ed4:	31 96       	adiw	r30, 0x01	; 1
     ed6:	d6 01       	movw	r26, r12
     ed8:	11 96       	adiw	r26, 0x01	; 1
     eda:	7d 01       	movw	r14, r26
     edc:	40 17       	cp	r20, r16
     ede:	51 07       	cpc	r21, r17
     ee0:	24 f0       	brlt	.+8      	; 0xeea <dtoa_prf+0x278>
     ee2:	d6 01       	movw	r26, r12
     ee4:	8c 93       	st	X, r24
     ee6:	67 01       	movw	r12, r14
     ee8:	e2 cf       	rjmp	.-60     	; 0xeae <dtoa_prf+0x23c>
     eea:	64 17       	cp	r22, r20
     eec:	75 07       	cpc	r23, r21
     eee:	39 f4       	brne	.+14     	; 0xefe <dtoa_prf+0x28c>
     ef0:	96 33       	cpi	r25, 0x36	; 54
     ef2:	20 f4       	brcc	.+8      	; 0xefc <dtoa_prf+0x28a>
     ef4:	95 33       	cpi	r25, 0x35	; 53
     ef6:	19 f4       	brne	.+6      	; 0xefe <dtoa_prf+0x28c>
     ef8:	31 11       	cpse	r19, r1
     efa:	01 c0       	rjmp	.+2      	; 0xefe <dtoa_prf+0x28c>
     efc:	81 e3       	ldi	r24, 0x31	; 49
     efe:	f6 01       	movw	r30, r12
     f00:	80 83       	st	Z, r24
     f02:	f7 01       	movw	r30, r14
     f04:	82 2f       	mov	r24, r18
     f06:	90 e2       	ldi	r25, 0x20	; 32
     f08:	88 23       	and	r24, r24
     f0a:	19 f0       	breq	.+6      	; 0xf12 <dtoa_prf+0x2a0>
     f0c:	91 93       	st	Z+, r25
     f0e:	81 50       	subi	r24, 0x01	; 1
     f10:	fb cf       	rjmp	.-10     	; 0xf08 <dtoa_prf+0x296>
     f12:	f7 01       	movw	r30, r14
     f14:	e2 0f       	add	r30, r18
     f16:	f1 1d       	adc	r31, r1
     f18:	10 82       	st	Z, r1
     f1a:	80 e0       	ldi	r24, 0x00	; 0
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	29 96       	adiw	r28, 0x09	; 9
     f20:	ec e0       	ldi	r30, 0x0C	; 12
     f22:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0xc>

00000f26 <__ftoa_engine>:
     f26:	28 30       	cpi	r18, 0x08	; 8
     f28:	08 f0       	brcs	.+2      	; 0xf2c <__ftoa_engine+0x6>
     f2a:	27 e0       	ldi	r18, 0x07	; 7
     f2c:	33 27       	eor	r19, r19
     f2e:	da 01       	movw	r26, r20
     f30:	99 0f       	add	r25, r25
     f32:	31 1d       	adc	r19, r1
     f34:	87 fd       	sbrc	r24, 7
     f36:	91 60       	ori	r25, 0x01	; 1
     f38:	00 96       	adiw	r24, 0x00	; 0
     f3a:	61 05       	cpc	r22, r1
     f3c:	71 05       	cpc	r23, r1
     f3e:	39 f4       	brne	.+14     	; 0xf4e <__ftoa_engine+0x28>
     f40:	32 60       	ori	r19, 0x02	; 2
     f42:	2e 5f       	subi	r18, 0xFE	; 254
     f44:	3d 93       	st	X+, r19
     f46:	30 e3       	ldi	r19, 0x30	; 48
     f48:	2a 95       	dec	r18
     f4a:	e1 f7       	brne	.-8      	; 0xf44 <__ftoa_engine+0x1e>
     f4c:	08 95       	ret
     f4e:	9f 3f       	cpi	r25, 0xFF	; 255
     f50:	30 f0       	brcs	.+12     	; 0xf5e <__ftoa_engine+0x38>
     f52:	80 38       	cpi	r24, 0x80	; 128
     f54:	71 05       	cpc	r23, r1
     f56:	61 05       	cpc	r22, r1
     f58:	09 f0       	breq	.+2      	; 0xf5c <__ftoa_engine+0x36>
     f5a:	3c 5f       	subi	r19, 0xFC	; 252
     f5c:	3c 5f       	subi	r19, 0xFC	; 252
     f5e:	3d 93       	st	X+, r19
     f60:	91 30       	cpi	r25, 0x01	; 1
     f62:	08 f0       	brcs	.+2      	; 0xf66 <__ftoa_engine+0x40>
     f64:	80 68       	ori	r24, 0x80	; 128
     f66:	91 1d       	adc	r25, r1
     f68:	df 93       	push	r29
     f6a:	cf 93       	push	r28
     f6c:	1f 93       	push	r17
     f6e:	0f 93       	push	r16
     f70:	ff 92       	push	r15
     f72:	ef 92       	push	r14
     f74:	19 2f       	mov	r17, r25
     f76:	98 7f       	andi	r25, 0xF8	; 248
     f78:	96 95       	lsr	r25
     f7a:	e9 2f       	mov	r30, r25
     f7c:	96 95       	lsr	r25
     f7e:	96 95       	lsr	r25
     f80:	e9 0f       	add	r30, r25
     f82:	ff 27       	eor	r31, r31
     f84:	e2 55       	subi	r30, 0x52	; 82
     f86:	ff 4f       	sbci	r31, 0xFF	; 255
     f88:	99 27       	eor	r25, r25
     f8a:	33 27       	eor	r19, r19
     f8c:	ee 24       	eor	r14, r14
     f8e:	ff 24       	eor	r15, r15
     f90:	a7 01       	movw	r20, r14
     f92:	e7 01       	movw	r28, r14
     f94:	05 90       	lpm	r0, Z+
     f96:	08 94       	sec
     f98:	07 94       	ror	r0
     f9a:	28 f4       	brcc	.+10     	; 0xfa6 <__ftoa_engine+0x80>
     f9c:	36 0f       	add	r19, r22
     f9e:	e7 1e       	adc	r14, r23
     fa0:	f8 1e       	adc	r15, r24
     fa2:	49 1f       	adc	r20, r25
     fa4:	51 1d       	adc	r21, r1
     fa6:	66 0f       	add	r22, r22
     fa8:	77 1f       	adc	r23, r23
     faa:	88 1f       	adc	r24, r24
     fac:	99 1f       	adc	r25, r25
     fae:	06 94       	lsr	r0
     fb0:	a1 f7       	brne	.-24     	; 0xf9a <__ftoa_engine+0x74>
     fb2:	05 90       	lpm	r0, Z+
     fb4:	07 94       	ror	r0
     fb6:	28 f4       	brcc	.+10     	; 0xfc2 <__ftoa_engine+0x9c>
     fb8:	e7 0e       	add	r14, r23
     fba:	f8 1e       	adc	r15, r24
     fbc:	49 1f       	adc	r20, r25
     fbe:	56 1f       	adc	r21, r22
     fc0:	c1 1d       	adc	r28, r1
     fc2:	77 0f       	add	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	99 1f       	adc	r25, r25
     fc8:	66 1f       	adc	r22, r22
     fca:	06 94       	lsr	r0
     fcc:	a1 f7       	brne	.-24     	; 0xfb6 <__ftoa_engine+0x90>
     fce:	05 90       	lpm	r0, Z+
     fd0:	07 94       	ror	r0
     fd2:	28 f4       	brcc	.+10     	; 0xfde <__ftoa_engine+0xb8>
     fd4:	f8 0e       	add	r15, r24
     fd6:	49 1f       	adc	r20, r25
     fd8:	56 1f       	adc	r21, r22
     fda:	c7 1f       	adc	r28, r23
     fdc:	d1 1d       	adc	r29, r1
     fde:	88 0f       	add	r24, r24
     fe0:	99 1f       	adc	r25, r25
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	06 94       	lsr	r0
     fe8:	a1 f7       	brne	.-24     	; 0xfd2 <__ftoa_engine+0xac>
     fea:	05 90       	lpm	r0, Z+
     fec:	07 94       	ror	r0
     fee:	20 f4       	brcc	.+8      	; 0xff8 <__ftoa_engine+0xd2>
     ff0:	49 0f       	add	r20, r25
     ff2:	56 1f       	adc	r21, r22
     ff4:	c7 1f       	adc	r28, r23
     ff6:	d8 1f       	adc	r29, r24
     ff8:	99 0f       	add	r25, r25
     ffa:	66 1f       	adc	r22, r22
     ffc:	77 1f       	adc	r23, r23
     ffe:	88 1f       	adc	r24, r24
    1000:	06 94       	lsr	r0
    1002:	a9 f7       	brne	.-22     	; 0xfee <__ftoa_engine+0xc8>
    1004:	84 91       	lpm	r24, Z
    1006:	10 95       	com	r17
    1008:	17 70       	andi	r17, 0x07	; 7
    100a:	41 f0       	breq	.+16     	; 0x101c <__ftoa_engine+0xf6>
    100c:	d6 95       	lsr	r29
    100e:	c7 95       	ror	r28
    1010:	57 95       	ror	r21
    1012:	47 95       	ror	r20
    1014:	f7 94       	ror	r15
    1016:	e7 94       	ror	r14
    1018:	1a 95       	dec	r17
    101a:	c1 f7       	brne	.-16     	; 0x100c <__ftoa_engine+0xe6>
    101c:	e4 e5       	ldi	r30, 0x54	; 84
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	68 94       	set
    1022:	15 90       	lpm	r1, Z+
    1024:	15 91       	lpm	r17, Z+
    1026:	35 91       	lpm	r19, Z+
    1028:	65 91       	lpm	r22, Z+
    102a:	95 91       	lpm	r25, Z+
    102c:	05 90       	lpm	r0, Z+
    102e:	7f e2       	ldi	r23, 0x2F	; 47
    1030:	73 95       	inc	r23
    1032:	e1 18       	sub	r14, r1
    1034:	f1 0a       	sbc	r15, r17
    1036:	43 0b       	sbc	r20, r19
    1038:	56 0b       	sbc	r21, r22
    103a:	c9 0b       	sbc	r28, r25
    103c:	d0 09       	sbc	r29, r0
    103e:	c0 f7       	brcc	.-16     	; 0x1030 <__ftoa_engine+0x10a>
    1040:	e1 0c       	add	r14, r1
    1042:	f1 1e       	adc	r15, r17
    1044:	43 1f       	adc	r20, r19
    1046:	56 1f       	adc	r21, r22
    1048:	c9 1f       	adc	r28, r25
    104a:	d0 1d       	adc	r29, r0
    104c:	7e f4       	brtc	.+30     	; 0x106c <__ftoa_engine+0x146>
    104e:	70 33       	cpi	r23, 0x30	; 48
    1050:	11 f4       	brne	.+4      	; 0x1056 <__ftoa_engine+0x130>
    1052:	8a 95       	dec	r24
    1054:	e6 cf       	rjmp	.-52     	; 0x1022 <__ftoa_engine+0xfc>
    1056:	e8 94       	clt
    1058:	01 50       	subi	r16, 0x01	; 1
    105a:	30 f0       	brcs	.+12     	; 0x1068 <__ftoa_engine+0x142>
    105c:	08 0f       	add	r16, r24
    105e:	0a f4       	brpl	.+2      	; 0x1062 <__ftoa_engine+0x13c>
    1060:	00 27       	eor	r16, r16
    1062:	02 17       	cp	r16, r18
    1064:	08 f4       	brcc	.+2      	; 0x1068 <__ftoa_engine+0x142>
    1066:	20 2f       	mov	r18, r16
    1068:	23 95       	inc	r18
    106a:	02 2f       	mov	r16, r18
    106c:	7a 33       	cpi	r23, 0x3A	; 58
    106e:	28 f0       	brcs	.+10     	; 0x107a <__ftoa_engine+0x154>
    1070:	79 e3       	ldi	r23, 0x39	; 57
    1072:	7d 93       	st	X+, r23
    1074:	2a 95       	dec	r18
    1076:	e9 f7       	brne	.-6      	; 0x1072 <__ftoa_engine+0x14c>
    1078:	10 c0       	rjmp	.+32     	; 0x109a <__ftoa_engine+0x174>
    107a:	7d 93       	st	X+, r23
    107c:	2a 95       	dec	r18
    107e:	89 f6       	brne	.-94     	; 0x1022 <__ftoa_engine+0xfc>
    1080:	06 94       	lsr	r0
    1082:	97 95       	ror	r25
    1084:	67 95       	ror	r22
    1086:	37 95       	ror	r19
    1088:	17 95       	ror	r17
    108a:	17 94       	ror	r1
    108c:	e1 18       	sub	r14, r1
    108e:	f1 0a       	sbc	r15, r17
    1090:	43 0b       	sbc	r20, r19
    1092:	56 0b       	sbc	r21, r22
    1094:	c9 0b       	sbc	r28, r25
    1096:	d0 09       	sbc	r29, r0
    1098:	98 f0       	brcs	.+38     	; 0x10c0 <__ftoa_engine+0x19a>
    109a:	23 95       	inc	r18
    109c:	7e 91       	ld	r23, -X
    109e:	73 95       	inc	r23
    10a0:	7a 33       	cpi	r23, 0x3A	; 58
    10a2:	08 f0       	brcs	.+2      	; 0x10a6 <__ftoa_engine+0x180>
    10a4:	70 e3       	ldi	r23, 0x30	; 48
    10a6:	7c 93       	st	X, r23
    10a8:	20 13       	cpse	r18, r16
    10aa:	b8 f7       	brcc	.-18     	; 0x109a <__ftoa_engine+0x174>
    10ac:	7e 91       	ld	r23, -X
    10ae:	70 61       	ori	r23, 0x10	; 16
    10b0:	7d 93       	st	X+, r23
    10b2:	30 f0       	brcs	.+12     	; 0x10c0 <__ftoa_engine+0x19a>
    10b4:	83 95       	inc	r24
    10b6:	71 e3       	ldi	r23, 0x31	; 49
    10b8:	7d 93       	st	X+, r23
    10ba:	70 e3       	ldi	r23, 0x30	; 48
    10bc:	2a 95       	dec	r18
    10be:	e1 f7       	brne	.-8      	; 0x10b8 <__ftoa_engine+0x192>
    10c0:	11 24       	eor	r1, r1
    10c2:	ef 90       	pop	r14
    10c4:	ff 90       	pop	r15
    10c6:	0f 91       	pop	r16
    10c8:	1f 91       	pop	r17
    10ca:	cf 91       	pop	r28
    10cc:	df 91       	pop	r29
    10ce:	99 27       	eor	r25, r25
    10d0:	87 fd       	sbrc	r24, 7
    10d2:	90 95       	com	r25
    10d4:	08 95       	ret

000010d6 <__prologue_saves__>:
    10d6:	2f 92       	push	r2
    10d8:	3f 92       	push	r3
    10da:	4f 92       	push	r4
    10dc:	5f 92       	push	r5
    10de:	6f 92       	push	r6
    10e0:	7f 92       	push	r7
    10e2:	8f 92       	push	r8
    10e4:	9f 92       	push	r9
    10e6:	af 92       	push	r10
    10e8:	bf 92       	push	r11
    10ea:	cf 92       	push	r12
    10ec:	df 92       	push	r13
    10ee:	ef 92       	push	r14
    10f0:	ff 92       	push	r15
    10f2:	0f 93       	push	r16
    10f4:	1f 93       	push	r17
    10f6:	cf 93       	push	r28
    10f8:	df 93       	push	r29
    10fa:	cd b7       	in	r28, 0x3d	; 61
    10fc:	de b7       	in	r29, 0x3e	; 62
    10fe:	ca 1b       	sub	r28, r26
    1100:	db 0b       	sbc	r29, r27
    1102:	0f b6       	in	r0, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	0f be       	out	0x3f, r0	; 63
    110a:	cd bf       	out	0x3d, r28	; 61
    110c:	09 94       	ijmp

0000110e <__epilogue_restores__>:
    110e:	2a 88       	ldd	r2, Y+18	; 0x12
    1110:	39 88       	ldd	r3, Y+17	; 0x11
    1112:	48 88       	ldd	r4, Y+16	; 0x10
    1114:	5f 84       	ldd	r5, Y+15	; 0x0f
    1116:	6e 84       	ldd	r6, Y+14	; 0x0e
    1118:	7d 84       	ldd	r7, Y+13	; 0x0d
    111a:	8c 84       	ldd	r8, Y+12	; 0x0c
    111c:	9b 84       	ldd	r9, Y+11	; 0x0b
    111e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1120:	b9 84       	ldd	r11, Y+9	; 0x09
    1122:	c8 84       	ldd	r12, Y+8	; 0x08
    1124:	df 80       	ldd	r13, Y+7	; 0x07
    1126:	ee 80       	ldd	r14, Y+6	; 0x06
    1128:	fd 80       	ldd	r15, Y+5	; 0x05
    112a:	0c 81       	ldd	r16, Y+4	; 0x04
    112c:	1b 81       	ldd	r17, Y+3	; 0x03
    112e:	aa 81       	ldd	r26, Y+2	; 0x02
    1130:	b9 81       	ldd	r27, Y+1	; 0x01
    1132:	ce 0f       	add	r28, r30
    1134:	d1 1d       	adc	r29, r1
    1136:	0f b6       	in	r0, 0x3f	; 63
    1138:	f8 94       	cli
    113a:	de bf       	out	0x3e, r29	; 62
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	cd bf       	out	0x3d, r28	; 61
    1140:	ed 01       	movw	r28, r26
    1142:	08 95       	ret

00001144 <_exit>:
    1144:	f8 94       	cli

00001146 <__stop_program>:
    1146:	ff cf       	rjmp	.-2      	; 0x1146 <__stop_program>
